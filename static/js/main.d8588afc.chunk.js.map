{"version":3,"sources":["assets/images/logo/logoHeader.png","layouts/Authorizations.js","utils/Firebase/context.js","utils/Firebase/firebase.js","utils/Firebase/index.js","pages/Login.js","components/Logout.js","components/MyHeader.js","layouts/MainLayout.js","components/UploadImg.js","pages/Editor.js","utils/utils.js","components/Tables.js","pages/Table.js","pages/Register.js","pages/PasswordForget.js","components/CardPost.js","pages/BlogPosts.js","pages/ViewPosts.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Content","Layout","Authorizations","id","className","xs","md","span","offset","bordered","src","logo","alt","this","props","children","React","Component","FirebaseContext","createContext","withFirebase","Consumer","firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Firebase","doCreateUserWithEmailAndPassword","email","password","auth","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignInWithGoogle","signInWithPopup","googleProvider","doSignInWithFacebook","facebookProvider","doSignInWithTwitter","twitterProvider","doSignOut","console","log","signOut","doPasswordReset","sendPasswordResetEmail","doSendEmailVerification","currentUser","sendEmailVerification","url","process","REACT_APP_CONFIRMATION_EMAIL_REDIRECT","doPasswordUpdate","updatePassword","onAuthUserListener","next","fallback","onAuthStateChanged","authUser","user","uid","db","ref","users","message","messages","app","initializeApp","serverValue","database","ServerValue","emailAuthProvider","EmailAuthProvider","GoogleAuthProvider","FacebookAuthProvider","TwitterAuthProvider","INITIAL_STATE","error","onSubmit","event","preventDefault","state","then","setState","catch","onChange","target","name","value","isInvalid","Item","prefix","type","style","color","placeholder","htmlType","disabled","to","icon","onClick","Header","MyHeader","background","padding","collapsed","toggle","Sider","MainLayout","trigger","collapsible","mode","defaultSelectedKeys","key","margin","minHeight","getBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","UploadImg","link","previewVisible","previewImage","fileList","updateLink","status","handleCancel","handlePreview","a","async","preview","originFileObj","handleChange","uploadToFirebase","storageRef","storage","uploadTask","child","put","contentType","on","TaskEvent","STATE_CHANGED","snapshot","progress","bytesTransferred","totalBytes","Math","floor","info","TaskState","PAUSED","warning","RUNNING","code","getDownloadURL","downloadURL","onUploadSuccess","uploadForm","uploadButton","marginLeft","shape","size","gutter","sm","lg","action","listType","onPreview","length","visible","footer","onCancel","width","TextArea","Input","Option","Select","formItemLayout","labelCol","wrapperCol","EditorPage","loading","iconLoading","postName","postTags","description","category","undefined","popular","countView","keyword","urlSlug","enterLoading","save","slugURL","slug","toLowerCase","random","toString","slice","editor","exportHtml","data","design","html","postId","update","content","JSON","stringify","title","tags","date","Date","getTime","author","contentAsHTML","push","notification","open","onChangeCategory","onChangeStatus","onChangePopular","checked","onChangeName","onChangeTags","onChangeDes","onChangeKeyword","nextProps","history","location","search","pathname","postImg","userId","once","forEach","childSnapshot","val","loadDesign","parse","uploadImgView","extra","label","autoSize","minRows","maxRows","checkedChildren","unCheckedChildren","defaultChecked","showSearch","optionFilterProp","onFocus","onBlur","onSearch","filterOption","input","option","indexOf","convertTimeToString","time","format","year","getFullYear","mon","getMonth","day","getDate","hour","getHours","min","getMinutes","second","getSeconds","replace","Title","Typography","Tables","searchText","searchedColumn","isLoading","dataSource","getColumnSearchProps","dataIndex","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","node","searchInput","e","onPressEnter","handleSearch","marginBottom","display","marginRight","handleReset","filterIcon","filtered","onFilter","record","includes","onFilterDropdownVisibleChange","setTimeout","select","render","text","highlightStyle","backgroundColor","searchWords","autoEscape","textToHighlight","handleDelete","filter","item","remove","unshift","columns","utils","level","split","map","ctgr","tag","k","okText","cancelText","onConfirm","href","tip","Table","username","passwordOne","passwordTwo","isAdmin","Register","roles","set","onChangeCheckbox","handleConfirmBlur","confirmDirty","compareToFirstPassword","rule","callback","form","getFieldValue","validateToNextPassword","validateFields","force","getFieldDecorator","rules","required","hasFeedback","validator","Password","Form","create","Meta","Card","Text","CardPost","cover","BlogPosts","ReactDOMServer","require","HtmlToReactParser","Parser","ViewPosts","view","reactElement","renderToStaticMarkup","isLogin","listener","exact","path","component","Login","PasswordForget","Boolean","window","hostname","match","ReactDOM","Provider","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d8588afc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logoHeader.b7aef3b4.png\";","import React from 'react';\nimport { Row, Col, Layout, Card } from 'antd';\nimport logo from '../assets/images/logo/logoHeader.png';\n\nconst { Content } = Layout;\nexport default class Authorizations extends React.Component {\n    render() {\n        return (\n            <div id=\"layOutAuthen\">\n                <div className=\"container\">\n                    <Row>                      \n                        <Col xs={24} md={{ span: 8, offset: 8 }}>\n                            <div className=\"aff_dashboard\">\n                                <Card bordered={false}>\n                                    <div className=\"logo_login mb3 tc\">\n                                        <img src={logo} alt=\"images logo\"></img>\n                                    </div>\n                                    <div className=\"auto-center\">\n\n                                        <Content>{this.props.children}</Content>\n                                    </div>\n                                </Card>\n                            </div>\n                        </Col>\n                    </Row>                   \n                </div>\n            </div>\n        )\n    }\n}","import React from 'react';\n\nconst FirebaseContext = React.createContext(null);\n\nexport const withFirebase = Component => props => (\n  <FirebaseContext.Consumer>\n    {firebase => <Component {...props} firebase={firebase} />}\n  </FirebaseContext.Consumer>\n);\n\nexport default FirebaseContext;\n","import app from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\n\nconst config = {\n  apiKey: \"AIzaSyCBFN7uAG91QluGYepV6xhXCo_KTItMuTU\",\n  authDomain: \"tool-post-name.firebaseapp.com\",\n  databaseURL: \"https://tool-post-name.firebaseio.com\",\n  projectId: \"tool-post-name\",\n  storageBucket: \"tool-post-name.appspot.com\",\n  messagingSenderId: \"337595574788\",\n  appId: \"1:337595574788:web:17dbc693d4827f581ee351\",\n  measurementId: \"G-9G445CQ3N2\"\n};\n\nclass Firebase {\n  constructor() {\n    app.initializeApp(config);\n\n    /* Helper */\n\n    this.serverValue = app.database.ServerValue;\n    this.emailAuthProvider = app.auth.EmailAuthProvider;\n\n    /* Firebase APIs */\n\n    this.auth = app.auth();\n    this.db = app.database();\n\n    /* Social Sign In Method Provider */\n\n    this.googleProvider = new app.auth.GoogleAuthProvider();\n    this.facebookProvider = new app.auth.FacebookAuthProvider();\n    this.twitterProvider = new app.auth.TwitterAuthProvider();\n  }\n\n  // *** Auth API ***\n\n  doCreateUserWithEmailAndPassword = (email, password) =>\n    this.auth.createUserWithEmailAndPassword(email, password);\n\n  doSignInWithEmailAndPassword = (email, password) =>\n    this.auth.signInWithEmailAndPassword(email, password);\n\n  doSignInWithGoogle = () =>\n    this.auth.signInWithPopup(this.googleProvider);\n\n  doSignInWithFacebook = () =>\n    this.auth.signInWithPopup(this.facebookProvider);\n\n  doSignInWithTwitter = () =>\n    this.auth.signInWithPopup(this.twitterProvider);\n\n  doSignOut = () => {console.log('sign out'); this.auth.signOut()} ; \n\n  doPasswordReset = email => this.auth.sendPasswordResetEmail(email);\n\n  doSendEmailVerification = () =>\n    this.auth.currentUser.sendEmailVerification({\n      url: process.env.REACT_APP_CONFIRMATION_EMAIL_REDIRECT,\n    });\n\n  doPasswordUpdate = password =>\n    this.auth.currentUser.updatePassword(password);\n\n  // *** Merge Auth and DB User API *** //\n\n  onAuthUserListener = (next, fallback) =>\n    this.auth.onAuthStateChanged(authUser => {\n      // console.log(authUser.uid)\n      if (authUser) {\n        // this.user(authUser.uid)\n        //   .once('value')\n        //   .then(snapshot => {\n        //     const dbUser = snapshot.val();\n\n        //     console.log(dbUser);\n        //     if(!dbUser){\n        //       fallback();\n        //       return;\n        //     }\n\n        //     // default empty roles\n        //     if (!dbUser.roles) {\n        //       dbUser.roles = {};\n        //     }\n\n        //     // merge auth and db user\n        //     authUser = {\n        //       uid: authUser.uid,\n        //       email: authUser.email,\n        //       emailVerified: authUser.emailVerified,\n        //       providerData: authUser.providerData,\n        //       ...dbUser,\n        //     };\n\n        //     next(authUser);\n        //   });\n        next(authUser);\n      } else {\n        fallback();\n      }\n    });\n\n  // *** User API ***\n\n  user = uid => this.db.ref(`users/${uid}`);\n\n  users = () => this.db.ref('users');\n\n  // *** Message API ***\n\n  message = uid => this.db.ref(`messages/${uid}`);\n\n  messages = () => this.db.ref('messages');\n}\n\nexport default Firebase;\n","import FirebaseContext, { withFirebase } from './context';\nimport Firebase from './firebase';\n\nexport default Firebase;\n\nexport { FirebaseContext, withFirebase };\n","import React from 'react';\nimport { Form, Icon, Input, Button, } from 'antd';\nimport { Link } from \"react-router-dom\";\nimport {withFirebase} from '../utils/Firebase';\n\n\nconst INITIAL_STATE = {\n    email: '',\n    password: '',\n    error: null,\n  };\n  \n  const ERROR_CODE_ACCOUNT_EXISTS =\n    'auth/account-exists-with-different-credential';\n  \n  const ERROR_MSG_ACCOUNT_EXISTS = `\n    An account with an E-Mail address to\n    this social account already exists. Try to login from\n    this account instead and associate your social accounts on\n    your personal account page.\n  `;\nclass Login extends React.Component {\n    constructor(props) {\n        super(props);\n    \n        this.state = { ...INITIAL_STATE };\n      }\n    \n      onSubmit = event => {\n        event.preventDefault();\n        const { email, password } = this.state;\n    \n        this.props.firebase\n          .doSignInWithEmailAndPassword(email, password)\n          .then(() => { console.log('login susscess');\n            this.setState({ ...INITIAL_STATE });\n            // this.props.history.push(ROUTES.HOME);\n          })\n          .catch(error => {\n            console.log('login failer', error);\n            this.setState({ error }); \n          });\n    \n      };\n    \n      onChange = event => {\n        this.setState({ [event.target.name]: event.target.value });\n      };\n    \n    render() {\n        const { email, password, error } = this.state;\n\n        const isInvalid = password === '' || email === '';\n        return (\n            <>\n                <Form onSubmit={this.onSubmit} className=\"login-form\">\n                    <Form.Item>\n                        <Input\n                            prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                            name=\"email\"\n                            value={email}\n                            onChange={this.onChange}\n                            type=\"text\"\n                            placeholder=\"Địa chỉ email\"\n                        />\n                    </Form.Item>\n                    <Form.Item>\n                        <Input\n                            prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                            name=\"password\"\n                            value={password}\n                            onChange={this.onChange}\n                            type=\"password\"\n                            placeholder=\"Mật Khẩu\"\n                        />\n                    </Form.Item>\n                    <Form.Item>\n                        {/* <Checkbox>Remember me</Checkbox> */}\n                        \n                        <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" disabled={isInvalid} >\n                            Log in\n                        </Button>\n                        {error && <p>{error.message}</p>}\n                        <Link to={'/register'}>Đăng ký</Link>\n                        <Link to={'/passwordForget'} className=\"login-form-forgot\">Quên mật khẩu</Link>\n                    </Form.Item>\n                </Form>\n            </>\n        );\n    }\n}\n\nexport default withFirebase(Login);","import React from 'react';\nimport { Button } from 'antd';\n\nimport { withFirebase } from '../utils/Firebase';\n\nconst SignOutButton = ({ firebase }) => (\n    <>\n        <Button icon=\"logout\" type=\"danger\" onClick={firebase.doSignOut} />\n    </>\n);\n\nexport default withFirebase(SignOutButton);\n","import React from 'react';\nimport { Layout, Menu, Icon, Row, Col} from 'antd';\nimport SignOutButton from './Logout';\nconst { Header} = Layout;\n\n\nexport default class MyHeader extends React.Component{\n\n      render() {\n        return (\n            <Header style={{ background: '#fff', padding: 0 }}>\n              <Row>\n                <Col span={8}>\n                  <Icon\n                    className=\"trigger\"\n                    type={this.props.collapsed ? 'menu-unfold' : 'menu-fold'}\n                    onClick={this.props.toggle}\n                  />\n                </Col>\n                <Col span={8} offset={8} className=\"tr\">\n                  <div className=\"mr3\"> \n                    <SignOutButton />\n                  </div>\n                </Col>\n              </Row>\n          </Header>\n        );\n      }\n}","import React from 'react';\nimport { Layout, Menu, Icon } from 'antd';\nimport { Link } from \"react-router-dom\";\nimport MyHeader from '../components/MyHeader';\nimport logo from '../assets/images/logo/logoHeader.png';\n\nconst { Sider, Content } = Layout;\n\nexport default class MainLayout extends React.Component{\n    state = {\n        collapsed: false,\n      };\n    \n      toggle = () => {\n        this.setState({\n          collapsed: !this.state.collapsed,\n        });\n      };\n    \n      render() {\n        return (\n          <Layout className=\"mainLayout\">\n            <Sider trigger={null} collapsible collapsed={this.state.collapsed}>\n              <div className=\"logo\">\n              <img src={logo} alt=\"images logo\"></img>\n              </div>\n              <Menu mode=\"inline\" defaultSelectedKeys={['1']}>\n                <Menu.Item key=\"1\">\n                  <Link to={'/'}>\n                    <Icon type=\"unordered-list\" />\n                    <span>Danh sách tin tức</span>\n                  </Link>\n                \n                  \n                </Menu.Item>\n                <Menu.Item key=\"2\">\n                  <Link to={'/editorPage'}>\n                    <Icon type=\"upload\" />                \n                      <span>Đăng Tin Mới</span>\n                  </Link>\n                </Menu.Item>\n                <Menu.Item key=\"3\">\n                  <Link to={'/blogPost'}>\n                    <Icon type=\"read\" />\n                    <span>Tin tức</span>\n                  </Link>\n                </Menu.Item>\n              </Menu>\n            </Sider>\n            <Layout>\n              <MyHeader toggle={this.toggle} collapsed={this.state.collapsed} />\n              <Content\n                style={{\n                  margin: '24px 16px',\n                  background: '#fff',\n                  minHeight: 280,\n                }}\n              >\n                {this.props.children}\n              </Content>\n            </Layout>\n          </Layout>\n        );\n      }\n}","import { Upload, Icon, message, Modal, Button, Row, Col } from 'antd';\nimport React from \"react\";\nimport axios from 'axios';\nimport firebase from \"firebase\";\n\nfunction getBase64(file) {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => resolve(reader.result);\n    reader.onerror = error => reject(error);\n  });\n}\nexport default class UploadImg extends React.Component {\n  state = {\n    link: '',\n    previewVisible: false,\n    previewImage: '',\n    fileList: [\n\n    ],\n    file: {}\n  }\n  //   constructor(props) {\n  //     super(props);\n  //     this.state = { file: null }\n  // }\n\n  //   handleChange = (event) => {\n  //       const file = event.target.files[0];\n  //       this.setState({ file });\n  //   }\n\n  updateLink = (link) => {this.setState({fileList: [{\n    \n      uid: '1',\n      name: 'image.png',\n      status: 'done',\n      url: link,\n    \n  }]})}\n\n  handleCancel = () => this.setState({ previewVisible: false });\n\n  handlePreview = async file => {\n    if (!file.url && !file.preview) {\n      file.preview = await getBase64(file.originFileObj);\n    }\n\n    this.setState({\n      previewImage: file.url || file.preview,\n      previewVisible: true,\n    });\n  };\n\n  handleChange = (event) => {\n    console.log(event);\n    this.setState({ file: event.file, fileList: event.fileList })\n  }\n  uploadToFirebase = () => {\n    const metadata = {\n      contentType: 'image/jpeg'\n    };\n    const storageRef = firebase.storage().ref();\n    console.log(this.state.file)\n    const uploadTask = storageRef.child('images/' + this.state.file.name).put(this.state.file.originFileObj, metadata);\n    // Listen for state changes, errors, and completion of the upload.\n    uploadTask.on(firebase.storage.TaskEvent.STATE_CHANGED, // or 'state_changed'\n       (snapshot) => {\n        // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\n        var progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n        \n        console.log('Upload is ' + Math.floor(progress) + '% done');\n        message.info('Tải lên là ' + Math.floor(progress) + '% hoàn thành');\n        switch (snapshot.state) {\n          case firebase.storage.TaskState.PAUSED: // or 'paused'\n            console.log('Upload is paused');\n            message.warning('Tải lên bị dừng lại')\n            break;\n          case firebase.storage.TaskState.RUNNING: // or 'running'\n            console.log('Upload is running');\n            // message.info('Đang tải')\n            break;\n        }\n      }, function (error) {\n\n        // A full list of error codes is available at\n        // https://firebase.google.com/docs/storage/web/handle-errors\n        switch (error.code) {\n          case 'storage/unauthorized':\n            // User doesn't have permission to access the object\n            break;\n\n          case 'storage/canceled':\n            // User canceled the upload\n            break;\n\n\n          case 'storage/unknown':\n            // Unknown error occurred, inspect error.serverResponse\n            break;\n        }\n      },  () => {\n        // Upload completed successfully, now we can get the download URL\n        uploadTask.snapshot.ref.getDownloadURL().then( (downloadURL) => {\n          this.props.onUploadSuccess(downloadURL);\n          // console.log('File available at', downloadURL);\n        });\n      });\n  }\n\n\n  render() {\n    const { previewVisible, previewImage, fileList } = this.state;\n    const uploadForm = (\n\n      <div className=\"dragger\">\n        <p className=\"ant-upload-drag-icon\">\n          <Icon type=\"inbox\" />\n        </p>\n        <p className=\"ant-upload-text\">Nhấp hoặc kéo hình vào khu vực này để tải lên</p>\n        <p className=\"ant-upload-hint\">\n          Chọn 1 tấm hình làm ảnh đại diện cho bài viết.\n                </p>\n      </div>\n    );\n    const uploadButton = (\n      <Button type=\"primary\" style={{marginLeft: 20}} shape=\"round\" icon=\"upload\" size=\"large\" onClick={this.uploadToFirebase}>\n          Đăng hình lên\n        </Button>\n    )\n\n    return (\n      <>\n\n        <Row gutter={[{ xs: 8, sm: 16, md: 24, lg: 32 }, 20]}>\n          <Col span={24}>\n            <Upload\n              className=\"uploadImg\"\n              action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\n              listType=\"picture-card\"\n              fileList={fileList}\n              onPreview={this.handlePreview}\n              onChange={this.handleChange}\n              \n            >\n              {fileList.length >= 1 ? null : uploadForm}\n              \n            </Upload>\n          </Col>\n          <Col span={24}>\n            {fileList.length >=1 ? uploadButton : null}\n          </Col>\n          <Modal visible={previewVisible} footer={null} onCancel={this.handleCancel}>\n            <img alt=\"example\" style={{ width: '100%' }} src={previewImage} />\n          </Modal>\n          \n        </Row>\n       \n      </>\n    );\n  }\n} ","import React, { useState, useEffect } from \"react\";\nimport {\n  Card,\n  Select,\n  Button,\n  notification,\n  Icon,\n  Input,\n  Row,\n  Col,\n  Form,\n  Switch\n} from \"antd\";\nimport EmailEditor from \"react-email-editor\";\nimport firebase from \"firebase\";\nimport UploadImg from \"../components/UploadImg\";\nimport FormItem from \"antd/lib/form/FormItem\";\nimport slug from \"slug\";\n\nconst { TextArea } = Input;\nconst { Option } = Select;\nconst formItemLayout = {\n  labelCol: { span: 4 },\n  wrapperCol: { span: 16 }\n};\n\nexport default class EditorPage extends React.Component {\n  state = {\n    loading: false,\n    iconLoading: false,\n    postName: \"\",\n    postTags: \"\",\n    description: \"\",\n    link: \"\",\n    category: undefined,\n    popular: false,\n    countView: 0,\n    keyword: \"\",\n    urlSlug: \"\"\n  };\n  componentWillReceiveProps(nextProps) {\n    const postId = nextProps.history.location.search.slice(4);\n    if (!postId && nextProps.history.location.pathname === \"/editorPage\") {\n      this.setState({\n        loading: false,\n        iconLoading: false,\n        postName: \"\",\n        postTags: \"\",\n        description: \"\",\n        link: \"\",\n        category: undefined,\n        postId: \"\",\n        postImg: \"\",\n        status: undefined,\n        popular: false,\n        keyword: \"\",\n        urlSlug: \"\"\n      });\n      console.log(\"run\");\n    }\n  }\n  componentDidMount() {\n    this.postId = this.props.history.location.search.slice(4);\n    this.userId = firebase.auth().currentUser.uid;\n    this.setState({\n      postId: this.postId,\n      countView: this.countView\n    });\n    console.log(\"Edit id\", this.postId);\n    // if(this.postId){\n    //     this.countView+=1;\n    //     console.log('vieews', this.countView)\n    // }\n    firebase\n      .database()\n      .ref(\"posts\")\n      .once(\"value\", snapshot => {\n        const data = [];\n        snapshot.forEach(childSnapshot => {\n          if (childSnapshot.key === this.postId) {\n            const data = childSnapshot.val();\n\n            // console.log('Edit post',data.content);\n            this.editor.loadDesign(JSON.parse(data.content));\n            this.setState({\n              postName: data.title,\n              postTags: data.tags,\n              description: data.description,\n              link: data.link,\n              category: data.category,\n              status: data.status,\n              popular: data.popular,\n              countView: data.countView,\n              keyword: data.keyword,\n              urlSlug: data.urlSlug\n            });\n\n            if (this.uploadImgView) {\n              this.uploadImgView.updateLink(data.link);\n            }\n          }\n\n          data.push({\n            ...childSnapshot.val(),\n            key: childSnapshot.key\n          });\n          // ...\n        });\n      });\n  }\n\n  enterLoading = () => {\n    this.setState({ loading: true });\n  };\n\n  save = () => {\n    if (\n      this.state.postName === \"\" ||\n      this.state.postTags === \"\" ||\n      this.state.description === \"\" ||\n      this.state.link === \"\" ||\n      this.state.category === \"\" ||\n      this.state.popular === \"\" ||\n      this.state.status === \"\" ||\n      this.state.keyword === \"\"\n    ) {\n      notification.open({\n        message: \"Vui lòng nhập đầy đủ thông tin!\",\n        icon: <Icon type=\"warning\" style={{ color: \"#FFC107\" }} />\n      });\n      return;\n    }\n    console.log(this.state.urlSlug);\n    \n    const slugURL =\n      this.state.urlSlug ||\n      slug(this.state.postName).toLowerCase() +\n        \"-\" +\n        Math.random()\n          .toString()\n          .slice(2, 8);\n    console.log(slugURL);\n    if (this.editor) {\n      this.editor.exportHtml(data => {\n        const { design, html } = data;\n        // console.log('exportHtml', html)\n        // console.log('Save data',data);\n\n        if (this.postId) {\n          const email = firebase.auth().currentUser.email;\n          const urlImg = firebase.storage().ref();\n          // console.log('user id',this.userId);\n\n          firebase\n            .database()\n            .ref(\"posts/\" + this.postId)\n            .update({\n              content: JSON.stringify(design),\n              title: this.state.postName,\n              tags: this.state.postTags,\n              date: new Date().getTime(),\n              author: email,\n              contentAsHTML: html,\n              description: this.state.description,\n              link: this.state.link,\n              category: this.state.category,\n              status: this.state.status,\n              popular: this.state.popular,\n              keyword: this.state.keyword,\n              urlSlug: slugURL\n            });\n        } else {\n          // console.log('user id',this.userId);\n          const email = firebase.auth().currentUser.email;\n          const urlImg = firebase.storage().ref();\n\n          firebase\n            .database()\n            .ref(\"posts\")\n            .push({\n              date: new Date().getTime(),\n              title: this.state.postName,\n              author: email,\n              tags: this.state.postTags,\n              content: JSON.stringify(design),\n              contentAsHTML: html,\n              description: this.state.description,\n              link: this.state.link,\n              category: this.state.category,\n              status: this.state.status,\n              popular: this.state.popular,\n              countView: 0,\n              keyword: this.state.keyword,\n              urlSlug: slugURL\n            });\n        }\n        notification.open({\n          message: \"Bài viết đã được lưu lại\",\n          icon: <Icon type=\"smile\" style={{ color: \"#108ee9\" }} />\n        });\n      });\n    }\n  };\n\n  // onChangeCategory(value) {\n  //     console.log(`selected ${value}`);\n  // }\n  onChangeCategory = value => {\n    this.setState({ category: value });\n    console.log(`selected`, value);\n  };\n  onChangeStatus = value => {\n    this.setState({ status: value });\n    console.log(`status is`, value);\n  };\n  onChangePopular = checked => {\n    this.setState({ popular: checked });\n    console.log(`checked switch`, checked);\n  };\n  onBlur() {\n    // console.log(\"blur\");\n  }\n  onFocus() {\n    // console.log(\"focus\");\n  }\n  onSearch(val) {\n    console.log(\"search:\", val);\n  }\n  onChangeName = event => {\n    this.setState({ postName: event.target.value });\n  };\n  onChangeTags = event => {\n    this.setState({ postTags: event.target.value });\n  };\n  onChangeDes = event => {\n    this.setState({ description: event.target.value });\n  };\n  onUploadSuccess = link => {\n    console.log(\"ddaay la link: \", link);\n    this.setState({ link });\n  };\n  onChangeKeyword = event => {\n    this.setState({ keyword: event.target.value });\n  };\n  render() {\n    return (\n      <>\n        <Card\n          title={this.state.postId ? \"Sửa Tin Tức\" : \"Thêm Tin Tức\"}\n          bordered={false}\n          extra={\n            <div>\n              <Button\n                type=\"primary\"\n                className=\"bg-dark-blue \"\n                loading={this.state.loading}\n                onClick={this.save}\n              >\n                Lưu Lại\n              </Button>\n            </div>\n          }\n        >\n          <Row gutter={[{ xs: 8, sm: 16, md: 24, lg: 32 }, 20]}>\n            <Col className=\"gutter-row\" span={12}>\n              <Form.Item\n                className=\"form-item\"\n                {...formItemLayout}\n                label=\"Tên Bài Viết: \"\n              >\n                <TextArea\n                  placeholder=\"Nhập tên bài viết\"\n                  value={this.state.postName}\n                  onChange={this.onChangeName}\n                  autoSize\n                />\n              </Form.Item>\n              <Form.Item\n                className=\"form-item\"\n                {...formItemLayout}\n                label=\"Mô Tả: \"\n              >\n                <TextArea\n                  placeholder=\"Nhập mô tả bài viết\"\n                  autoSize={{ minRows: 6, maxRows: 8 }}\n                  value={this.state.description}\n                  onChange={this.onChangeDes}\n                />\n              </Form.Item>\n\n              <Form.Item\n                className=\"form-item\"\n                {...formItemLayout}\n                label=\"Tên Chủ Đề: \"\n              >\n                <TextArea\n                  placeholder=\"Nhập tên chủ đề\"\n                  value={this.state.postTags}\n                  onChange={this.onChangeTags}\n                  autoSize\n                />\n              </Form.Item>\n              <Form.Item\n                className=\"form-item\"\n                {...formItemLayout}\n                label=\"Từ khóa SEO: \"\n              >\n                <TextArea\n                  placeholder=\"Nhập từ khóa để SEO\"\n                  value={this.state.keyword}\n                  onChange={this.onChangeKeyword}\n                  autoSize\n                />\n              </Form.Item>\n            </Col>\n            <Col className=\"gutter-row\" span={12}>\n              <FormItem\n                className=\"form-item\"\n                {...formItemLayout}\n                label=\"Bài viết nổi bật: \"\n              >\n                <Switch\n                  checkedChildren={<Icon type=\"check\" />}\n                  unCheckedChildren={<Icon type=\"close\" />}\n                  defaultChecked\n                  onChange={this.onChangePopular}\n                  checked={this.state.popular}\n                />\n              </FormItem>\n              <Form.Item\n                className=\"form-item\"\n                {...formItemLayout}\n                label=\"Thể loại: \"\n              >\n                <Select\n                  showSearch\n                  style={{ width: 200 }}\n                  placeholder=\"Chọn thể loại\"\n                  optionFilterProp=\"children\"\n                  onChange={this.onChangeCategory}\n                  value={this.state.category}\n                  // value={this.category}\n                  onFocus={this.onFocus}\n                  onBlur={this.onBlur}\n                  onSearch={this.onSearch}\n                  filterOption={(input, option) =>\n                    option.props.children\n                      .toLowerCase()\n                      .indexOf(input.toLowerCase()) >= 0\n                  }\n                >\n                  <Option value=\"news\">Tin tức</Option>\n                  <Option value=\"events\">Sự kiện</Option>\n                  <Option value=\"stocks\">Cổ phiếu</Option>\n                </Select>\n              </Form.Item>\n              <Form.Item\n                className=\"form-item\"\n                {...formItemLayout}\n                label=\"Trạng thái: \"\n              >\n                <Select\n                  showSearch\n                  style={{ width: 200 }}\n                  placeholder=\"Chọn trạng thái của bài viết\"\n                  optionFilterProp=\"children\"\n                  onChange={this.onChangeStatus}\n                  value={this.state.status}\n                  // value={this.category}\n                  onFocus={this.onFocus}\n                  onBlur={this.onBlur}\n                  onSearch={this.onSearch}\n                  filterOption={(input, option) =>\n                    option.props.children\n                      .toLowerCase()\n                      .indexOf(input.toLowerCase()) >= 0\n                  }\n                >\n                  <Option value=\"published\">Xuất bản</Option>\n                  <Option value=\"draft\">Nháp</Option>\n                  <Option value=\"disable\">Ẩn</Option>\n                </Select>\n              </Form.Item>\n\n              <UploadImg\n                key={this.state.postImg}\n                onUploadSuccess={this.onUploadSuccess}\n                ref={ref => (this.uploadImgView = ref)}\n              />\n            </Col>\n            <Col className=\"gutter-row\" span={24}>\n              <hr></hr>\n              <EmailEditor\n                key={this.state.postId}\n                style={{ width: \"2000px\" }}\n                ref={ref => (this.editor = ref)}\n              />\n            </Col>\n          </Row>\n        </Card>\n      </>\n    );\n  }\n}\n// Get a reference to the database service\n// var database = firebase.database();\n","export const convertTimeToString = (time, format) => {\n    const date = new Date(time);\n    const year = date.getFullYear();\n    const mon = ('0' + (date.getMonth() + 1)).slice(-2);\n    const day = ('0' + date.getDate()).slice(-2);\n    const hour = ('0' + date.getHours()).slice(-2);\n    const min = ('0' + date.getMinutes()).slice(-2);\n    const second = ('0' + date.getSeconds()).slice(-2);\n  \n    return format\n      .replace('YYYY', year.toString())\n      .replace('yyyy', year.toString())\n      .replace('dd', day.toString())\n      .replace('DD', day.toString())\n      .replace('MM', mon.toString())\n      .replace('hh', hour.toString())\n      .replace('mm', min.toString())\n      .replace('ss', second.toString());\n  };","import React from \"react\";\nimport { Table, Input, Button, Icon, Tag, Popconfirm, Divider, Spin, Typography} from \"antd\";\nimport Highlighter from \"react-highlight-words\";\nimport { Link } from \"react-router-dom\";\nimport firebase from 'firebase';\nimport * as utils from '../utils/utils'\n\n\nconst { Title } = Typography;\nexport default class Tables extends React.Component {\n  state = {\n    loading: false,\n    iconLoading: false,\n    searchText: \"\",\n    searchedColumn: \"\",\n    isLoading: true,\n    dataSource: [\n    ]\n  };\n\n  constructor(props) {\n    super(props);\n    firebase.database().ref('posts').once('value', snapshot => {\n      const data = [];\n      snapshot.forEach(function (childSnapshot) {\n        data.unshift({\n          ...childSnapshot.val(),\n          key: childSnapshot.key\n        });\n        // ...\n      });\n      this.setState({ dataSource: data, isLoading: false });\n      console.log('view', data)\n    });\n  }\n\n  getColumnSearchProps = dataIndex => ({\n    filterDropdown: ({\n      setSelectedKeys,\n      selectedKeys,\n      confirm,\n      clearFilters\n    }) => (\n        <div style={{ padding: 8 }}>\n          <Input\n            ref={node => {\n              this.searchInput = node;\n            }}\n            placeholder={`Search ${dataIndex}`}\n            value={selectedKeys[0]}\n            onChange={e =>\n              setSelectedKeys(e.target.value ? [e.target.value] : [])\n            }\n            onPressEnter={() =>\n              this.handleSearch(selectedKeys, confirm, dataIndex)\n            }\n            style={{ width: 188, marginBottom: 8, display: \"block\" }}\n          />\n          <Button\n            type=\"primary\"\n            onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n            icon=\"search\"\n            size=\"small\"\n            style={{ width: 90, marginRight: 8 }}\n          >\n            Search\n        </Button>\n          <Button\n            onClick={() => this.handleReset(clearFilters)}\n            size=\"small\"\n            style={{ width: 90 }}\n          >\n            Reset\n        </Button>\n        </div>\n      ),\n    filterIcon: filtered => (\n      <Icon type=\"search\" style={{ color: filtered ? \"#1890ff\" : undefined }} />\n    ),\n    onFilter: (value, record) =>\n      record[dataIndex]\n        .toString()\n        .toLowerCase()\n        .includes(value.toLowerCase()),\n    onFilterDropdownVisibleChange: visible => {\n      if (visible) {\n        setTimeout(() => this.searchInput.select());\n      }\n    },\n    render: text =>\n      this.state.searchedColumn === dataIndex ? (\n        <Highlighter\n          highlightStyle={{ backgroundColor: \"#ffc069\", padding: 0 }}\n          searchWords={[this.state.searchText]}\n          autoEscape\n          textToHighlight={text.toString()}\n        />\n      ) : (\n          text\n        )\n  });\n\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm();\n    this.setState({\n      searchText: selectedKeys[0],\n      searchedColumn: dataIndex\n    });\n  };\n\n  handleReset = clearFilters => {\n    clearFilters();\n    this.setState({ searchText: \"\" });\n  };\n\n  handleDelete = key => {\n    const dataSource = [...this.state.dataSource];\n    this.setState({ dataSource: dataSource.filter(item => item.key !== key) });\n    firebase.database().ref('posts/' + key).remove()\n    \n  };\n  render() {\n    \n    const columns = [\n      {\n        title: \"Thời gian đăng\",\n        dataIndex: \"date\",\n        key: \"date\",\n        ...this.getColumnSearchProps(\"date\"),\n        render: text => <span>{utils.convertTimeToString(text, \"DD/MM/YYYY hh:mm\")}</span>\n        \n      },\n      {\n        title: \"Tiêu đề\",\n        dataIndex: \"title\",\n        key: \"title\",\n        className: 'titleTable',\n        ...this.getColumnSearchProps(\"title\")\n      },\n      {\n        title: \"Tác giả\",\n        dataIndex: \"author\",\n        key: \"author\",\n        ...this.getColumnSearchProps(\"author\")\n      },\n      {\n        title: \"Lượt xem\",\n        dataIndex: \"countView\",\n        key: \"countView\",\n        ...this.getColumnSearchProps(\"countView\"),\n        render: countView => {\n          return (\n            <Title level={4}>{countView}</Title>\n          )\n        },\n      },\n      {\n        title: 'Thể loại',\n        dataIndex: \"category\",\n        key: \"category\",\n        ...this.getColumnSearchProps(\"category\"),\n        render: category => {\n          if(!category) return (\n            <span>\n              <Tag color=\"gold\">\n                Không có thể loại\n              </Tag>\n            </span>\n          )\n          return (\n            <span>\n              {category.split(\",\").map(ctgr => {\n                if (ctgr === 'news') return (\n                  <span key={ctgr}>\n                    <Tag color=\"#f50\">\n                      Tin tức\n                    </Tag>\n                  </span>\n                )\n                if (ctgr === 'events') return (\n                  <span key={ctgr}>\n                    <Tag color=\"#2db7f5\">\n                      Sự kiện\n                    </Tag>\n                  </span>\n                )\n                if (ctgr === 'stocks') return (\n                  <span key={ctgr}>\n                    <Tag color=\"#87d068\">\n                      Cổ phiếu\n                    </Tag>\n                  </span>\n                )\n              })\n              }\n            </span>\n          )\n        }\n      },\n      {\n        title: \"Chủ đề\",\n        dataIndex: \"tags\",\n        key: \"tags\",\n        ...this.getColumnSearchProps(\"tags\"),\n        render: tags => {\n          if (!tags) return (\n            <span>\n              <Tag color=\"gold\">\n                Không có chủ đề\n              </Tag>\n            </span>\n          )\n          return (\n            <span>\n              {tags.split(\",\").map(tag => <span key={tag}>\n                <Tag color=\"blue\" style={{marginBottom: 10}}>\n                  {tag}\n                </Tag>\n              </span>)\n              }\n            </span>\n          )\n        },\n      },\n      {\n        title: \"Từ khóa SEO\",\n        dataIndex: \"keyword\",\n        key: \"keyword\",\n        ...this.getColumnSearchProps(\"keyword\"),\n        render: keyword => {\n          if (!keyword) return (\n            <span>\n              <Tag color=\"gold\">\n                Không có chủ đề\n              </Tag>\n            </span>\n          )\n          return (\n            <span>\n              {keyword.split(\",\").map(k => <span key={k}>\n                <Tag color=\"blue\" style={{marginBottom: 10}}>\n                  {k}\n                </Tag>\n              </span>)\n              }\n            </span>\n          )\n        },\n      },\n      {\n        title: \"Trạng thái\",\n        dataIndex: \"status\",\n        key: \"status\",\n        ...this.getColumnSearchProps(\"status\"),\n        render: status => {\n          let color;\n          if (status === 'published') {\n            color = 'green';\n            return (\n              <Tag color={color} key={status}>\n                Xuất bản\n              </Tag>\n            )\n          }\n          else if (status === 'draft') {\n            color = 'gold';\n            return (\n              <Tag color={color} key={status}>\n                Nháp\n              </Tag>\n            )\n          }\n          else if (status === 'disable') {\n            color = 'red';\n            return (\n              <Tag color={color} key={status}>\n                Ẩn\n              </Tag>\n            )\n          } else {\n            return (\n              <Tag color=\"gold\">\n                Trạng thái chưa cập nhật\n              </Tag>\n            )\n            \n          }\n        },\n      },\n      {\n        title: 'Nổi bật',\n        dataIndex: 'popular',\n        key: 'popular',\n        ...this.getColumnSearchProps(\"popular\"),\n        render: popular => {\n          let color;\n          if (popular === true) {\n            color = 'purple';\n            return (\n              <Tag color={color} key={popular}>\n                Nổi bật\n              </Tag>\n            )\n          }\n\n        },\n\n      },\n      {\n        title: 'Hành động',\n        dataIndex: 'key',\n        key: 'key',\n        className: 'action',\n        render: (record) =>\n          this.state.dataSource.length >= 1 ? (\n            <div>\n              <Link to={'/viewPost?id=' + record}>\n                <span>Xem</span>\n              </Link>\n              <Divider type=\"vertical\" />\n              <Popconfirm title=\"Xác nhận xóa?\" okText=\"Có\" cancelText=\"Hủy\" onConfirm={() => this.handleDelete(record)}>\n                <a href=\"# \">Xóa</a>\n              </Popconfirm>\n              <Divider type=\"vertical\" />\n              <Link to={'/editorPage?id=' + record}>\n                <span>Sửa</span>\n              </Link>\n            </div>\n\n          ) : null,\n      },\n      \n    ];\n    if(this.state.isLoading){\n      return <div className=\"loadData\">\n                <Spin size=\"large\" tip=\"Loading...\" />\n              </div>\n    }\n    return (\n      <>\n        <Table className=\"table\" columns={columns} dataSource={this.state.dataSource} bordered />\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport { Card} from \"antd\";\nimport Tables from \"../components/Tables\";\n\nexport default class Table extends React.Component {\n    render() {\n        return (\n            <>\n                <Card\n                    title=\"Danh sách tin tức\"\n                    bordered={false}                  \n                >\n                    <Tables />\n                </Card>\n            </>\n        );\n    }\n}\n","import React from 'react';\nimport { Form, Input, Button, } from 'antd';\nimport { Link } from \"react-router-dom\";\nimport {withFirebase} from '../utils/Firebase';\n\n\nconst INITIAL_STATE = {\n    username: '',\n    email: '',\n    passwordOne: '',\n    passwordTwo: '',\n    isAdmin: false,\n    error: null,\n  };\n  \n  const ERROR_CODE_ACCOUNT_EXISTS = 'auth/email-already-in-use';\n  \n  const ERROR_MSG_ACCOUNT_EXISTS = `\n    An account with this E-Mail address already exists.\n    Try to login with this account instead. If you think the\n    account is already used from one of the social logins, try\n    to sign in with one of them. Afterward, associate your accounts\n    on your personal account page.\n  `;\nclass Register extends React.Component {\n    constructor(props) {\n        super(props);\n    \n        this.state = { ...INITIAL_STATE };\n      }\n    \n      onSubmit = event => {\n        const { username, email, passwordOne, isAdmin } = this.state;\n        const roles = {};\n    \n        if (isAdmin) {\n          roles['ADMIN'] = 'ADMIN';\n        }\n    \n        this.props.firebase\n          .doCreateUserWithEmailAndPassword(email, passwordOne)\n          .then(authUser => {\n            // Create a user in your Firebase realtime database\n            return this.props.firebase.user(authUser.user.uid).set({\n              username,\n              email,\n              roles,\n            });\n          })\n          .then(() => {\n            return this.props.firebase.doSendEmailVerification();\n          })\n          .then(() => {\n            this.setState({ ...INITIAL_STATE });\n            this.props.history.push('/');\n          })\n          .catch(error => {\n            if (error.code === ERROR_CODE_ACCOUNT_EXISTS) {\n              error.message = ERROR_MSG_ACCOUNT_EXISTS;\n            }\n    \n            this.setState({ error });\n          });\n    \n        event.preventDefault();\n      };\n    \n      onChange = event => {\n        this.setState({ [event.target.name]: event.target.value });\n      };\n    \n      onChangeCheckbox = event => {\n        this.setState({ [event.target.name]: event.target.checked });\n      };\n\n      handleConfirmBlur = e => {\n        const { value } = e.target;\n        this.setState({ confirmDirty: this.state.confirmDirty || !!value });\n      };\n    \n      compareToFirstPassword = (rule, value, callback) => {\n        const { form } = this.props;\n        if (value && value !== form.getFieldValue('password')) {\n          callback('Hai mật khẩu không giống nhau!');\n        } else {\n          callback();\n        }\n      };\n    \n      validateToNextPassword = (rule, value, callback) => {\n        const { form } = this.props;\n        if (value && this.state.confirmDirty) {\n          form.validateFields(['confirm'], { force: true });\n        }\n        callback();\n      };\n    render() {\n        const {\n            email,\n            passwordOne,\n            passwordTwo,\n            error,\n          } = this.state;\n\n          const isInvalid =\n          passwordOne !== passwordTwo ||\n          passwordOne === '' ||\n          email === '';\n\n          \n          const tailFormItemLayout = {\n            wrapperCol: {\n              xs: {\n                span: 24,\n                offset: 0,\n              },\n              sm: {\n                span: 16,\n                offset: 4,\n              },\n            },\n          };\n          const { getFieldDecorator } = this.props.form;\n        return (\n            <>\n                <Form id=\"registerForm\" onSubmit={this.onSubmit} className=\"login-form\">\n                    <Form.Item label=\"Email\">\n                    {getFieldDecorator('email', {\n                        rules: [\n                        {\n                            type: 'email',\n                            message: 'Địa chỉ E-mail không hợp lệ!',\n                        },\n                        {\n                            required: true,\n                            message: 'Vui lòng nhập địa chỉ E-mail của bạn!',\n                        },\n                        ],\n                    })(<Input\n                        name=\"email\"\n                        value={email}\n                        onChange={this.onChange}\n                        type=\"text\"\n                        placeholder=\"Email Address\"\n                    />)}\n                        \n                    </Form.Item>\n                    <Form.Item label=\"Password\" hasFeedback>\n                    {getFieldDecorator('password', {\n                        rules: [\n                        {\n                            required: true,\n                            message: 'Vui lòng nhập mật khẩu của bạn!',\n                        },\n                        {\n                            validator: this.validateToNextPassword,\n                        },\n                        ],\n                    })(<Input.Password \n                        name=\"passwordOne\"\n                        value={passwordOne}\n                        onChange={this.onChange}\n                        type=\"password\"\n                        placeholder=\"Password\"\n                    />)}\n                        \n                    </Form.Item>\n                    <Form.Item label=\"Confirm Password\" hasFeedback>\n                    {getFieldDecorator('confirm', {\n                        rules: [\n                        {\n                            required: true,\n                            message: 'Vui lòng xác nhận mật khẩu của bạn!',\n                        },\n                        {\n                            validator: this.compareToFirstPassword,\n                        },\n                        ],\n                    })(<Input.Password \n                        name=\"passwordTwo\"\n                        value={passwordTwo}\n                        onChange={this.onChange}\n                        type=\"password\"\n                        placeholder=\"Confirm Password\"\n                        onBlur={this.handleConfirmBlur}\n                    />)}\n                        \n                    </Form.Item>\n                    <Form.Item {...tailFormItemLayout}>\n                        {/* <Checkbox>Remember me</Checkbox> */}\n                        \n                        <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" disabled={isInvalid} >\n                            Đăng ký\n                        </Button>\n                        {error && <p>{error.message}</p>}\n                        <Link to={'/login'}>Đăng nhập</Link>\n                        <Link to={'/passwordForget'} className=\"login-form-forgot\">Quên mật khẩu</Link>\n                    </Form.Item>\n                </Form>\n            </>\n        );\n    }\n}\n\nexport default withFirebase(Form.create({ name: 'register' })(Register));","import React from 'react';\nimport { Form, Input, Button, } from 'antd';\nimport { Link } from \"react-router-dom\";\nimport {withFirebase} from '../utils/Firebase';\n\n\nconst INITIAL_STATE = {\n    email: '',\n    error: null,\n  };\nclass PasswordForget extends React.Component {\n    constructor(props) {\n        super(props);\n    \n        this.state = { ...INITIAL_STATE };\n      }\n    \n      onSubmit = event => {\n        const { email } = this.state;\n    \n        this.props.firebase\n          .doPasswordReset(email)\n          .then(() => {\n            this.setState({ ...INITIAL_STATE });\n          })\n          .catch(error => {\n            this.setState({ error });\n          });\n    \n        event.preventDefault();\n      };\n    \n      onChange = event => {\n        this.setState({ [event.target.name]: event.target.value });\n      };\n    render() {\n        const { email, error } = this.state;\n\n        const isInvalid = email === '';\n        return (\n            <>\n                <Form id=\"registerForm\" onSubmit={this.onSubmit} className=\"login-form\">\n                    <Form.Item>\n                        <Input\n                            name=\"email\"\n                            value={this.state.email}\n                            onChange={this.onChange}\n                            type=\"text\"\n                            placeholder=\"Địa chỉ email\"\n                        />\n                    </Form.Item>\n                    <Form.Item>\n                        {/* <Checkbox>Remember me</Checkbox> */}\n                        \n                        <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" disabled={isInvalid} >\n                            ok\n                        </Button>\n                        {error && <p>{error.message}</p>}\n                        <Link to={'/login'}>Đăng nhập</Link>\n                        <Link to={'/register'} className=\"login-form-forgot\">Đăng ký</Link>\n                        \n                    </Form.Item>\n                </Form>\n            </>\n        );\n    }\n}\n\nexport default withFirebase(PasswordForget);","import React from \"react\";\nimport { Col, Card, Typography, Spin } from \"antd\";\nimport firebase from \"firebase\";\nimport * as utils from \"../utils/utils\";\nimport { Link } from \"react-router-dom\";\n\nconst { Meta } = Card;\nconst { Text } = Typography;\nexport default class CardPost extends React.Component {\n  state = {\n    isLoading: true,\n    dataSource: []\n  };\n\n  constructor(props) {\n    super(props);\n    firebase\n      .database()\n      .ref(\"posts\")\n      .once(\"value\", snapshot => {\n        const data = [];\n        snapshot.forEach(function(childSnapshot) {\n          data.unshift({\n            ...childSnapshot.val(),\n            key: childSnapshot.key\n          });\n          // ...\n        });\n        this.setState({ dataSource: data, isLoading: false });\n      });\n  }\n\n  render() {\n    if (this.state.isLoading) {\n      return (\n        <div className=\"loadData\">\n          <Spin size=\"large\" tip=\"Loading...\" />\n        </div>\n      );\n    }\n    return (\n      <>\n        {this.state.dataSource.map(item => {\n          if (item.category === \"news\") {\n            item.category = \"Tin Tức\";\n          } else if (item.category === \"events\") {\n            item.category = \"Sự Kiện\";\n          } else {\n            item.category = \"Cổ Phiếu\";\n          }\n          if (item.status === \"published\") {\n            return (\n              <Col key={item.key} className=\"gutter-row\" span={6}>\n                <Link to={\"/viewPost?id=\" + item.key}>\n                  <Card\n                    className=\"cardPost\"\n                    extra={\n                      <span className=\"card-post__category\">\n                        {item.category}\n                      </span>\n                    }\n                    cover={<img alt=\"example\" src={item.link} />}\n                  >\n                    <Meta\n                      style={{ marginBottom: 8 }}\n                      title={item.title}\n                      description={item.description}\n                    />\n                    <Text code>\n                      {utils.convertTimeToString(\n                        item.date,\n                        \"Ngày đăng: DD/MM/YYYY\"\n                      )}\n                    </Text>\n                  </Card>\n                </Link>\n              </Col>\n            );\n          }\n        })}\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport {Row} from \"antd\";\nimport CardPost from \"../components/CardPost\";\n\nexport default class BlogPosts extends React.Component {\n    render() {\n        return (\n            <div style={{margin: '15px'}}>\n                <Row gutter={[{ xs: 8, sm: 16, md: 24, lg: 32 }, 20]}>\n                    <CardPost />\n                </Row>\n            </div>\n        );\n    }\n}\n","import React from \"react\";\nimport firebase from \"firebase\";\nimport {Icon, Spin} from \"antd\";\nvar ReactDOMServer = require('react-dom/server');\nvar HtmlToReactParser = require('html-to-react').Parser;\n\nexport default class ViewPosts extends React.Component {\n    state = {\n        isLoading: true,\n        countView: 0,\n        data: {}\n    };\n\n    componentDidMount(){\n        this.postId = this.props.history.location.search.slice(4);\n        this.userId = firebase.auth().currentUser.uid;\n        this.setState({\n            postId : this.postId,\n            // postName : this.postName,\n        })\n        console.log('Edit id',this.postId);\n        firebase.database().ref('posts').once('value',snapshot=>{\n            const data = [];\n            snapshot.forEach((childSnapshot) =>{\n                if(childSnapshot.key  === this.postId){\n                    const data = childSnapshot.val();\n                    console.log('Edit post',data.content);\n                    this.setState({data: data, isLoading: false, countView: data.countView+1});\n                    // console.log('view', data.countView+1)\n                    const view = data.countView>0?data.countView+1: 1\n                    firebase.database().ref('posts/' + this.postId ).update({\n                        countView: view\n                    })\n                }\n              // ...\n            });\n          });\n\n    }\n\n    render() {\n        var htmlToReactParser = new HtmlToReactParser();\n        var reactElement = htmlToReactParser.parse(this.state.data.contentAsHTML);\n        var reactHtml = ReactDOMServer.renderToStaticMarkup(reactElement);\n        if(this.state.isLoading){\n            return <div className=\"loadData\">\n                      <Spin size=\"large\" tip=\"Loading...\" />\n                    </div>\n          }\n        return (\n            \n            <>\n                {reactElement}\n            </>\n        );\n    }\n}\n// Get a reference to the database service\n// var database = firebase.database();","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\nimport Authorizations from './layouts/Authorizations';\nimport Login from './pages/Login';\nimport MainLayout from './layouts/MainLayout';\nimport EditorPage from './pages/Editor';\nimport Table from './pages/Table';\nimport {withFirebase} from './utils/Firebase'\nimport Register from './pages/Register';\nimport PasswordForget from './pages/PasswordForget';\nimport BlogPosts from './pages/BlogPosts';\nimport ViewPosts from './pages/ViewPosts';\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      isLogin: false,\n      isLoading: true,\n    };\n    this.listener = this.props.firebase.onAuthUserListener(\n      authUser => {\n        console.log('login success 1');\n        this.setState({ isLogin: true, isLoading: false });\n      },\n      () => {\n        console.log('login fail');\n        this.setState({ isLogin: false, isLoading: false });\n      },\n    );\n  }\n\n  componentDidMount(){\n    \n  }\n\n  componentWillUnmount(){\n    if(this.listener){\n      this.listener();\n    }\n  }\n  render(){\n    if(this.state.isLoading){\n      return <div className=\"preloader\">\n                <div className=\"status\"></div>\n              </div>\n    }\n    return(\n    <Router>\n      {!this.state.isLogin?\n      <Authorizations>\n        <Switch>\n          <Route path='/login' component={Login} />\n          <Route path='/register' component={Register} />\n          <Route path='/passwordForget' component={PasswordForget} />\n          <Redirect to={'/login'}></Redirect>\n          \n        </Switch>\n      </Authorizations>:\n      <MainLayout>\n        <Switch>\n          <Route exact path='/' component={Table} />\n          <Route exact path='/editorPage' component={EditorPage} />    \n          <Route exact path='/blogPost' component={BlogPosts} /> \n          <Route exact path='/viewPost' component={ViewPosts} />       \n          <Redirect to={'/'}></Redirect>\n        </Switch>\n      </MainLayout>}\n    </Router >\n    )\n  }\n  \n};\n\n\nexport default withFirebase(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/scss/style.scss';\nimport 'antd/dist/antd.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport Firebase, { FirebaseContext } from './utils/Firebase';\n\nReactDOM.render(\n    <FirebaseContext.Provider value={new Firebase()}>\n      <App />\n    </FirebaseContext.Provider>,\n    document.getElementById('root'),\n  );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}