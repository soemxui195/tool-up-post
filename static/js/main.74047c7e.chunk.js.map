{"version":3,"sources":["assets/images/logo/logo.png","layouts/Authorizations.js","utils/Firebase/context.js","utils/Firebase/firebase.js","utils/Firebase/index.js","pages/Login.js","components/Logout.js","components/MyHeader.js","layouts/MainLayout.js","components/UploadImg.js","pages/Editor.js","utils/utils.js","components/Tables.js","pages/Table.js","pages/Register.js","pages/PasswordForget.js","components/CardPost.js","pages/BlogPosts.js","pages/ViewPosts.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Content","Layout","Authorizations","id","className","xs","md","span","offset","bordered","src","logo","alt","this","props","children","React","Component","FirebaseContext","createContext","withFirebase","Consumer","firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Firebase","doCreateUserWithEmailAndPassword","email","password","auth","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignInWithGoogle","signInWithPopup","googleProvider","doSignInWithFacebook","facebookProvider","doSignInWithTwitter","twitterProvider","doSignOut","console","log","signOut","doPasswordReset","sendPasswordResetEmail","doSendEmailVerification","currentUser","sendEmailVerification","url","process","REACT_APP_CONFIRMATION_EMAIL_REDIRECT","doPasswordUpdate","updatePassword","onAuthUserListener","next","fallback","onAuthStateChanged","authUser","user","uid","db","ref","users","message","messages","app","initializeApp","serverValue","database","ServerValue","emailAuthProvider","EmailAuthProvider","GoogleAuthProvider","FacebookAuthProvider","TwitterAuthProvider","INITIAL_STATE","error","onSubmit","event","preventDefault","state","then","setState","catch","onChange","target","name","value","isInvalid","Item","prefix","type","style","color","placeholder","htmlType","disabled","to","onClick","Header","menu","key","href","Divider","MyHeader","background","padding","collapsed","toggle","overlay","trigger","shape","size","icon","Sider","MainLayout","collapsible","mode","defaultSelectedKeys","margin","minHeight","getBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","UploadImg","link","previewVisible","previewImage","fileList","updateLink","status","handleCancel","handlePreview","a","async","preview","originFileObj","handleChange","uploadToFirebase","storageRef","storage","uploadTask","child","put","contentType","on","TaskEvent","STATE_CHANGED","snapshot","progress","bytesTransferred","totalBytes","Math","floor","info","TaskState","PAUSED","warning","RUNNING","code","getDownloadURL","downloadURL","onUploadSuccess","uploadForm","uploadButton","marginLeft","gutter","sm","lg","action","listType","onPreview","length","visible","footer","onCancel","width","TextArea","Input","Option","Select","formItemLayout","labelCol","wrapperCol","EditorPage","loading","iconLoading","postName","postTags","description","category","undefined","popular","countView","enterLoading","save","editor","exportHtml","data","design","html","postId","userId","set","content","JSON","stringify","title","tags","date","Date","getTime","author","contentAsHTML","push","notification","open","onChangeCategory","onChangeStatus","onChangePopular","checked","onChangeName","onChangeTags","onChangeDes","nextProps","history","location","search","slice","pathname","postImg","once","forEach","childSnapshot","val","loadDesign","parse","uploadImgView","extra","label","autoSize","minRows","maxRows","checkedChildren","unCheckedChildren","defaultChecked","showSearch","optionFilterProp","onFocus","onBlur","onSearch","filterOption","input","option","toLowerCase","indexOf","convertTimeToString","time","format","year","getFullYear","mon","getMonth","day","getDate","hour","getHours","min","getMinutes","second","getSeconds","replace","toString","Tables","searchText","searchedColumn","isLoading","dataSource","getColumnSearchProps","dataIndex","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","node","searchInput","e","onPressEnter","handleSearch","marginBottom","display","marginRight","handleReset","filterIcon","filtered","onFilter","record","includes","onFilterDropdownVisibleChange","setTimeout","select","render","text","highlightStyle","backgroundColor","searchWords","autoEscape","textToHighlight","handleDelete","filter","item","remove","columns","utils","split","map","ctgr","tag","okText","cancelText","onConfirm","tip","Table","username","passwordOne","passwordTwo","isAdmin","Register","roles","onChangeCheckbox","handleConfirmBlur","confirmDirty","compareToFirstPassword","rule","callback","form","getFieldValue","validateToNextPassword","validateFields","force","getFieldDecorator","rules","required","hasFeedback","validator","Password","Form","create","Meta","Card","Text","Typography","CardPost","cover","BlogPosts","ReactDOMServer","require","HtmlToReactParser","Parser","ViewPosts","reactElement","renderToStaticMarkup","isLogin","listener","exact","path","component","Login","PasswordForget","Boolean","window","hostname","match","ReactDOM","Provider","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.74047c7e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.7eb6f8d5.png\";","import React from 'react';\nimport { Row, Col, Layout, Card } from 'antd';\nimport logo from '../assets/images/logo/logo.png';\n\nconst { Content } = Layout;\nexport default class Authorizations extends React.Component {\n    render() {\n        return (\n            <div id=\"layOutAuthen\">\n                <div className=\"container\">\n                    <Row>                      \n                        <Col xs={24} md={{ span: 8, offset: 8 }}>\n                            <div className=\"aff_dashboard\">\n                                <Card bordered={false}>\n                                    <div className=\"logo_login mb3 tc\">\n                                        <img src={logo} alt=\"images logo\"></img>\n                                    </div>\n                                    <div className=\"auto-center\">\n\n                                        <Content>{this.props.children}</Content>\n                                    </div>\n                                </Card>\n                            </div>\n                        </Col>\n                    </Row>                   \n                </div>\n            </div>\n        )\n    }\n}","import React from 'react';\n\nconst FirebaseContext = React.createContext(null);\n\nexport const withFirebase = Component => props => (\n  <FirebaseContext.Consumer>\n    {firebase => <Component {...props} firebase={firebase} />}\n  </FirebaseContext.Consumer>\n);\n\nexport default FirebaseContext;\n","import app from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\n\nconst config = {\n  apiKey: \"AIzaSyCBFN7uAG91QluGYepV6xhXCo_KTItMuTU\",\n  authDomain: \"tool-post-name.firebaseapp.com\",\n  databaseURL: \"https://tool-post-name.firebaseio.com\",\n  projectId: \"tool-post-name\",\n  storageBucket: \"tool-post-name.appspot.com\",\n  messagingSenderId: \"337595574788\",\n  appId: \"1:337595574788:web:17dbc693d4827f581ee351\",\n  measurementId: \"G-9G445CQ3N2\"\n};\n\nclass Firebase {\n  constructor() {\n    app.initializeApp(config);\n\n    /* Helper */\n\n    this.serverValue = app.database.ServerValue;\n    this.emailAuthProvider = app.auth.EmailAuthProvider;\n\n    /* Firebase APIs */\n\n    this.auth = app.auth();\n    this.db = app.database();\n\n    /* Social Sign In Method Provider */\n\n    this.googleProvider = new app.auth.GoogleAuthProvider();\n    this.facebookProvider = new app.auth.FacebookAuthProvider();\n    this.twitterProvider = new app.auth.TwitterAuthProvider();\n  }\n\n  // *** Auth API ***\n\n  doCreateUserWithEmailAndPassword = (email, password) =>\n    this.auth.createUserWithEmailAndPassword(email, password);\n\n  doSignInWithEmailAndPassword = (email, password) =>\n    this.auth.signInWithEmailAndPassword(email, password);\n\n  doSignInWithGoogle = () =>\n    this.auth.signInWithPopup(this.googleProvider);\n\n  doSignInWithFacebook = () =>\n    this.auth.signInWithPopup(this.facebookProvider);\n\n  doSignInWithTwitter = () =>\n    this.auth.signInWithPopup(this.twitterProvider);\n\n  doSignOut = () => {console.log('sign out'); this.auth.signOut()} ; \n\n  doPasswordReset = email => this.auth.sendPasswordResetEmail(email);\n\n  doSendEmailVerification = () =>\n    this.auth.currentUser.sendEmailVerification({\n      url: process.env.REACT_APP_CONFIRMATION_EMAIL_REDIRECT,\n    });\n\n  doPasswordUpdate = password =>\n    this.auth.currentUser.updatePassword(password);\n\n  // *** Merge Auth and DB User API *** //\n\n  onAuthUserListener = (next, fallback) =>\n    this.auth.onAuthStateChanged(authUser => {\n      // console.log(authUser.uid)\n      if (authUser) {\n        // this.user(authUser.uid)\n        //   .once('value')\n        //   .then(snapshot => {\n        //     const dbUser = snapshot.val();\n\n        //     console.log(dbUser);\n        //     if(!dbUser){\n        //       fallback();\n        //       return;\n        //     }\n\n        //     // default empty roles\n        //     if (!dbUser.roles) {\n        //       dbUser.roles = {};\n        //     }\n\n        //     // merge auth and db user\n        //     authUser = {\n        //       uid: authUser.uid,\n        //       email: authUser.email,\n        //       emailVerified: authUser.emailVerified,\n        //       providerData: authUser.providerData,\n        //       ...dbUser,\n        //     };\n\n        //     next(authUser);\n        //   });\n        next(authUser);\n      } else {\n        fallback();\n      }\n    });\n\n  // *** User API ***\n\n  user = uid => this.db.ref(`users/${uid}`);\n\n  users = () => this.db.ref('users');\n\n  // *** Message API ***\n\n  message = uid => this.db.ref(`messages/${uid}`);\n\n  messages = () => this.db.ref('messages');\n}\n\nexport default Firebase;\n","import FirebaseContext, { withFirebase } from './context';\nimport Firebase from './firebase';\n\nexport default Firebase;\n\nexport { FirebaseContext, withFirebase };\n","import React from 'react';\nimport { Form, Icon, Input, Button, } from 'antd';\nimport { Link } from \"react-router-dom\";\nimport {withFirebase} from '../utils/Firebase';\n\n\nconst INITIAL_STATE = {\n    email: '',\n    password: '',\n    error: null,\n  };\n  \n  const ERROR_CODE_ACCOUNT_EXISTS =\n    'auth/account-exists-with-different-credential';\n  \n  const ERROR_MSG_ACCOUNT_EXISTS = `\n    An account with an E-Mail address to\n    this social account already exists. Try to login from\n    this account instead and associate your social accounts on\n    your personal account page.\n  `;\nclass Login extends React.Component {\n    constructor(props) {\n        super(props);\n    \n        this.state = { ...INITIAL_STATE };\n      }\n    \n      onSubmit = event => {\n        event.preventDefault();\n        const { email, password } = this.state;\n    \n        this.props.firebase\n          .doSignInWithEmailAndPassword(email, password)\n          .then(() => { console.log('login susscess');\n            this.setState({ ...INITIAL_STATE });\n            // this.props.history.push(ROUTES.HOME);\n          })\n          .catch(error => {\n            console.log('login failer', error);\n            this.setState({ error }); \n          });\n    \n      };\n    \n      onChange = event => {\n        this.setState({ [event.target.name]: event.target.value });\n      };\n    \n    render() {\n        const { email, password, error } = this.state;\n\n        const isInvalid = password === '' || email === '';\n        return (\n            <>\n                <Form onSubmit={this.onSubmit} className=\"login-form\">\n                    <Form.Item>\n                        <Input\n                            prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                            name=\"email\"\n                            value={email}\n                            onChange={this.onChange}\n                            type=\"text\"\n                            placeholder=\"Địa chỉ email\"\n                        />\n                    </Form.Item>\n                    <Form.Item>\n                        <Input\n                            prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                            name=\"password\"\n                            value={password}\n                            onChange={this.onChange}\n                            type=\"password\"\n                            placeholder=\"Mật Khẩu\"\n                        />\n                    </Form.Item>\n                    <Form.Item>\n                        {/* <Checkbox>Remember me</Checkbox> */}\n                        \n                        <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" disabled={isInvalid} >\n                            Log in\n                        </Button>\n                        {error && <p>{error.message}</p>}\n                        <Link to={'/register'}>Đăng ký</Link>\n                        <Link to={'/passwordForget'} className=\"login-form-forgot\">Quên mật khẩu</Link>\n                    </Form.Item>\n                </Form>\n            </>\n        );\n    }\n}\n\nexport default withFirebase(Login);","import React from 'react';\nimport { Button } from 'antd';\n\nimport { withFirebase } from '../utils/Firebase';\n\nconst SignOutButton = ({ firebase }) => (\n    <>\n        <Button type=\"primary\" onClick={firebase.doSignOut}>Đăng xuất</Button>\n    </>\n);\n\nexport default withFirebase(SignOutButton);\n","import React from 'react';\nimport { Layout, Menu, Icon, Dropdown, Row, Col, Avatar} from 'antd';\nimport SignOutButton from './Logout';\nconst { Header} = Layout;\n\n\nconst menu = (\n  <Menu>\n    <Menu.Item key=\"0\">\n      <a href=\"http://www.alipay.com/\">1st menu item</a>\n    </Menu.Item>\n    <Menu.Item key=\"1\">\n      <a href=\"http://www.taobao.com/\">2nd menu item</a>\n    </Menu.Item>\n    <Menu.Divider />\n    <Menu className=\"tc\"><SignOutButton /></Menu>\n  </Menu>\n);\n\nexport default class MyHeader extends React.Component{\n\n      render() {\n        return (\n            <Header style={{ background: '#fff', padding: 0 }}>\n              <Row>\n                <Col span={8}>\n                  <Icon\n                    className=\"trigger\"\n                    type={this.props.collapsed ? 'menu-unfold' : 'menu-fold'}\n                    onClick={this.props.toggle}\n                  />\n                </Col>\n                <Col span={8} offset={8} className=\"tr\">\n                  <div className=\"mr3\"> \n                    <Dropdown  overlay={menu} trigger={['click']}>\n                      <Avatar shape=\"square\" size=\"large\" icon=\"user\" />\n                    </Dropdown>\n                  </div>\n                </Col>\n              </Row>\n          </Header>\n        );\n      }\n}","import React from 'react';\nimport { Layout, Menu, Icon } from 'antd';\nimport { Link } from \"react-router-dom\";\nimport MyHeader from '../components/MyHeader';\n\nconst { Sider, Content } = Layout;\n\nexport default class MainLayout extends React.Component{\n    state = {\n        collapsed: false,\n      };\n    \n      toggle = () => {\n        this.setState({\n          collapsed: !this.state.collapsed,\n        });\n      };\n    \n      render() {\n        return (\n          <Layout className=\"mainLayout\">\n            <Sider trigger={null} collapsible collapsed={this.state.collapsed}>\n              <div className=\"logo\" />\n              <Menu mode=\"inline\" defaultSelectedKeys={['1']}>\n                <Menu.Item key=\"1\">\n                  <Link to={'/'}>\n                    <Icon type=\"unordered-list\" />\n                    <span>Danh sách tin tức</span>\n                  </Link>\n                \n                  \n                </Menu.Item>\n                <Menu.Item key=\"2\">\n                  <Link to={'/editorPage'}>\n                    <Icon type=\"upload\" />                \n                      <span>Đăng Tin Mới</span>\n                  </Link>\n                </Menu.Item>\n                <Menu.Item key=\"3\">\n                  <Link to={'/blogPost'}>\n                    <Icon type=\"read\" />\n                    <span>Tin tức</span>\n                  </Link>\n                </Menu.Item>\n              </Menu>\n            </Sider>\n            <Layout>\n              <MyHeader toggle={this.toggle} collapsed={this.state.collapsed} />\n              <Content\n                style={{\n                  margin: '24px 16px',\n                  background: '#fff',\n                  minHeight: 280,\n                }}\n              >\n                {this.props.children}\n              </Content>\n            </Layout>\n          </Layout>\n        );\n      }\n}","import { Upload, Icon, message, Modal, Button, Row, Col } from 'antd';\nimport React from \"react\";\nimport axios from 'axios';\nimport firebase from \"firebase\";\n\nfunction getBase64(file) {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => resolve(reader.result);\n    reader.onerror = error => reject(error);\n  });\n}\nexport default class UploadImg extends React.Component {\n  state = {\n    link: '',\n    previewVisible: false,\n    previewImage: '',\n    fileList: [\n\n    ],\n    file: {}\n  }\n  //   constructor(props) {\n  //     super(props);\n  //     this.state = { file: null }\n  // }\n\n  //   handleChange = (event) => {\n  //       const file = event.target.files[0];\n  //       this.setState({ file });\n  //   }\n\n  updateLink = (link) => {this.setState({fileList: [{\n    \n      uid: '1',\n      name: 'image.png',\n      status: 'done',\n      url: link,\n    \n  }]})}\n\n  handleCancel = () => this.setState({ previewVisible: false });\n\n  handlePreview = async file => {\n    if (!file.url && !file.preview) {\n      file.preview = await getBase64(file.originFileObj);\n    }\n\n    this.setState({\n      previewImage: file.url || file.preview,\n      previewVisible: true,\n    });\n  };\n\n  handleChange = (event) => {\n    console.log(event);\n    this.setState({ file: event.file, fileList: event.fileList })\n  }\n  uploadToFirebase = () => {\n    const metadata = {\n      contentType: 'image/jpeg'\n    };\n    const storageRef = firebase.storage().ref();\n    console.log(this.state.file)\n    const uploadTask = storageRef.child('images/' + this.state.file.name).put(this.state.file.originFileObj, metadata);\n    // Listen for state changes, errors, and completion of the upload.\n    uploadTask.on(firebase.storage.TaskEvent.STATE_CHANGED, // or 'state_changed'\n       (snapshot) => {\n        // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\n        var progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n        \n        console.log('Upload is ' + Math.floor(progress) + '% done');\n        message.info('Tải lên là ' + Math.floor(progress) + '% hoàn thành');\n        switch (snapshot.state) {\n          case firebase.storage.TaskState.PAUSED: // or 'paused'\n            console.log('Upload is paused');\n            message.warning('Tải lên bị dừng lại')\n            break;\n          case firebase.storage.TaskState.RUNNING: // or 'running'\n            console.log('Upload is running');\n            // message.info('Đang tải')\n            break;\n        }\n      }, function (error) {\n\n        // A full list of error codes is available at\n        // https://firebase.google.com/docs/storage/web/handle-errors\n        switch (error.code) {\n          case 'storage/unauthorized':\n            // User doesn't have permission to access the object\n            break;\n\n          case 'storage/canceled':\n            // User canceled the upload\n            break;\n\n\n          case 'storage/unknown':\n            // Unknown error occurred, inspect error.serverResponse\n            break;\n        }\n      },  () => {\n        // Upload completed successfully, now we can get the download URL\n        uploadTask.snapshot.ref.getDownloadURL().then( (downloadURL) => {\n          this.props.onUploadSuccess(downloadURL);\n          // console.log('File available at', downloadURL);\n        });\n      });\n  }\n\n\n  render() {\n    const { previewVisible, previewImage, fileList } = this.state;\n    const uploadForm = (\n\n      <div className=\"dragger\">\n        <p className=\"ant-upload-drag-icon\">\n          <Icon type=\"inbox\" />\n        </p>\n        <p className=\"ant-upload-text\">Nhấp hoặc kéo hình vào khu vực này để tải lên</p>\n        <p className=\"ant-upload-hint\">\n          Chọn 1 tấm hình làm ảnh đại diện cho bài viết.\n                </p>\n      </div>\n    );\n    const uploadButton = (\n      <Button type=\"primary\" style={{marginLeft: 20}} shape=\"round\" icon=\"upload\" size=\"large\" onClick={this.uploadToFirebase}>\n          Đăng hình lên\n        </Button>\n    )\n\n    return (\n      <>\n\n        <Row gutter={[{ xs: 8, sm: 16, md: 24, lg: 32 }, 20]}>\n          <Col span={24}>\n            <Upload\n              className=\"uploadImg\"\n              action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\n              listType=\"picture-card\"\n              fileList={fileList}\n              onPreview={this.handlePreview}\n              onChange={this.handleChange}\n              \n            >\n              {fileList.length >= 1 ? null : uploadForm}\n              \n            </Upload>\n          </Col>\n          <Col span={24}>\n            {fileList.length >=1 ? uploadButton : null}\n          </Col>\n          <Modal visible={previewVisible} footer={null} onCancel={this.handleCancel}>\n            <img alt=\"example\" style={{ width: '100%' }} src={previewImage} />\n          </Modal>\n          \n        </Row>\n       \n      </>\n    );\n  }\n} ","import React, {useState, useEffect} from \"react\";\nimport { Card, Select, Button, notification, Icon, Input, Row, Col, Form, Switch} from \"antd\";\nimport EmailEditor from 'react-email-editor';\nimport firebase from \"firebase\";\nimport UploadImg from \"../components/UploadImg\";\nimport FormItem from \"antd/lib/form/FormItem\";\n\nconst { TextArea } = Input;\nconst { Option } = Select;\nconst formItemLayout = {\n    labelCol: { span: 4 },\n    wrapperCol: { span: 16 },\n};\n\nexport default class EditorPage extends React.Component {\n    state = {\n        loading: false,\n        iconLoading: false,\n        postName: '',\n        postTags: '',\n        description: '',\n        link: '',\n        category: undefined,\n        popular: false,\n        countView: 0\n    };\n    componentWillReceiveProps(nextProps){\n        const postId = nextProps.history.location.search.slice(4);\n        if(!postId && nextProps.history.location.pathname == '/editorPage'){\n            \n            this.setState(\n                {\n                    loading: false,\n                    iconLoading: false,\n                    postName: '',\n                    postTags: '',\n                    description: '',\n                    link: '',\n                    category: undefined,\n                    postId: '',\n                    postImg: '',\n                    status: undefined,\n                    popular: false,\n                    \n                }          \n            )\n            console.log('run')\n        \n        }\n       \n    }\n    componentDidMount(){\n        this.postId = this.props.history.location.search.slice(4);\n        this.userId = firebase.auth().currentUser.uid;\n        this.setState({\n            postId : this.postId,\n            countView : this.countView,\n        })\n        console.log('Edit id',this.postId);\n        // if(this.postId){\n        //     this.countView+=1;\n        //     console.log('vieews', this.countView)\n        // }\n        firebase.database().ref('posts').once('value',snapshot=>{\n            const data = [];\n            snapshot.forEach((childSnapshot) =>{\n                if(childSnapshot.key  === this.postId){\n                    const data = childSnapshot.val();\n                    \n                    // console.log('Edit post',data.content);\n                    this.editor.loadDesign(JSON.parse(data.content));\n                    this.setState({postName: data.title,\n                        postTags: data.tags,\n                        description: data.description,\n                        link: data.link,\n                        category: data.category,\n                        status: data.status,\n                        popular: data.popular,\n                        countView: data.countView});\n                        \n                        \n                    if(this.uploadImgView){\n                        this.uploadImgView.updateLink(data.link);\n                    }\n                }\n                \n              data.push({\n                ...childSnapshot.val(),\n                key: childSnapshot.key});\n              // ...\n            });\n          });\n        \n    }\n    \n    enterLoading = () => {\n        this.setState({ loading: true });\n    };\n\n    save = () => {\n        if(this.state.postName === '' || this.state.postTags === '' || this.state.description === ''){\n            notification.open({\n                message: 'Vui lòng nhập đầy đủ thông tin!',        \n                icon: <Icon type=\"warning\" style={{ color: '#FFC107' }} />,\n              });\n              return;\n        }\n        \n        if(this.editor){\n            this.editor.exportHtml(data=>{\n                const { design, html } = data\n                // console.log('exportHtml', html)\n                // console.log('Save data',data);\n\n                if(this.postId){\n                    const email = firebase.auth().currentUser.email;\n                    const urlImg = firebase.storage().ref();\n                    console.log('user id',this.userId);\n                    firebase.database().ref('posts/' + this.postId ).set({\n                        content: JSON.stringify(design), \n                        title: this.state.postName, \n                        tags: this.state.postTags,\n                        date: new Date().getTime(),   \n                        author: email,\n                        contentAsHTML: html,\n                        description: this.state.description,\n                        link: this.state.link,\n                        category: this.state.category,\n                        status:  this.state.status,\n                        popular: this.state.popular,\n                        // countView: this.state.countView +1,\n                    })\n                    \n                } else{\n                    console.log('user id',this.userId);\n                    const email = firebase.auth().currentUser.email;\n                    const urlImg = firebase.storage().ref();\n                    \n                    firebase.database().ref('posts').push({\n                        date: new Date().getTime(),                       \n                        title: this.state.postName,                        \n                        author: email,\n                        tags: this.state.postTags,\n                        content: JSON.stringify(design),\n                        contentAsHTML: html,\n                        description: this.state.description,\n                        link: this.state.link,\n                        category: this.state.category,\n                        status: this.state.status,\n                        popular: this.state.popular,\n                        // countView: this.state.countView +1,\n                    });\n                    \n                }\n                notification.open({\n                    message: 'Bài viết đã được lưu lại',        \n                    icon: <Icon type=\"smile\" style={{ color: '#108ee9' }} />,\n                });\n            });\n\n        }\n        \n    };\n\n    // onChangeCategory(value) {\n    //     console.log(`selected ${value}`);\n    // }\n    onChangeCategory = value => {\n        this.setState({category: value});\n        console.log(`selected`, value)\n    }\n    onChangeStatus = value => {\n        this.setState({status: value});\n        console.log(`status is`, value)\n    }\n    onChangePopular = checked => {\n        this.setState({popular: checked});\n        console.log(`checked switch`, checked)\n    }\n    onBlur() {\n        // console.log(\"blur\");\n    }\n    onFocus() {\n        // console.log(\"focus\");\n    }\n    onSearch(val) {\n        console.log(\"search:\", val);\n    }\n    onChangeName = event => {\n        this.setState({postName:event.target.value});\n    };\n    onChangeTags = event => {\n        this.setState({postTags: event.target.value});\n    }\n    onChangeDes = event => {\n        this.setState({description: event.target.value});\n    }\n    onUploadSuccess = link => {\n        console.log('ddaay la link: ' ,link);\n        this.setState({link});\n    }\n   \n    render() {\n        \n        return (          \n            <>\n                <Card\n                    title={this.state.postId? \"Sửa Tin Tức\" : \"Thêm Tin Tức\"} \n                    bordered={false}\n                    extra={\n                        <div>\n                            \n                            <Button\n                                type=\"primary\"\n                                className=\"bg-dark-blue \"\n                                loading={this.state.loading}\n                                onClick={this.save}\n                                \n                            >\n                                Lưu Lại\n                            </Button>\n                            \n                        </div>\n                    }\n                >\n                    <Row gutter={[{ xs: 8, sm: 16, md: 24, lg: 32 }, 20]}>\n                        <Col className=\"gutter-row\" span={12}>\n                            <Form.Item className=\"form-item\" {...formItemLayout} label=\"Tên Bài Viết: \">\n                                <TextArea placeholder=\"Nhập tên bài viết\"\n                                value={this.state.postName}\n                                onChange={this.onChangeName}                                                \n                                autoSize />\n                            </Form.Item>\n                            <Form.Item className=\"form-item\" {...formItemLayout} label=\"Mô Tả: \">\n                                <TextArea\n                                placeholder=\"Nhập mô tả bài viết\"\n                                autoSize={{ minRows: 6, maxRows: 8 }}\n                                value={this.state.description}\n                                onChange={this.onChangeDes}\n                                />\n                            </Form.Item>\n                            \n                            <Form.Item className=\"form-item\" {...formItemLayout} label=\"Tên Chủ Đề: \">\n                                <TextArea placeholder=\"Nhập tên chủ đề\"\n                                value={this.state.postTags}\n                                onChange={this.onChangeTags}    \n                                                   \n                                autoSize />\n                            </Form.Item>\n                            <FormItem className=\"form-item\" {...formItemLayout} label=\"Bài viết nổi bật: \">\n                                <Switch\n                                    checkedChildren={<Icon type=\"check\" />}\n                                    unCheckedChildren={<Icon type=\"close\" />}\n                                    defaultChecked\n                                    onChange={this.onChangePopular}\n                                    checked={this.state.popular}\n                                />\n                            </FormItem>\n                                                      \n                        </Col>\n                        <Col className=\"gutter-row\" span={12}>\n                            <Form.Item className=\"form-item\" {...formItemLayout} label=\"Thể loại: \">\n                                <Select\n                                    showSearch\n                                    style={{ width: 200 }}\n                                    placeholder=\"Chọn thể loại\"\n                                    optionFilterProp=\"children\"\n                                    onChange={this.onChangeCategory}\n                                    value={this.state.category}\n                                    // value={this.category}\n                                    onFocus={this.onFocus}\n                                    onBlur={this.onBlur}\n                                    onSearch={this.onSearch}\n                                    filterOption={(input, option) =>\n                                    option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                                    }\n                                >\n                                    <Option value=\"news\">Tin tức</Option>\n                                    <Option value=\"events\">Sự kiện</Option>\n                                    <Option value=\"stocks\">Cổ phiếu</Option>\n                                </Select>\n                            </Form.Item>\n                            <Form.Item className=\"form-item\" {...formItemLayout} label=\"Trạng thái: \">\n                                <Select\n                                    showSearch\n                                    style={{ width: 200 }}\n                                    placeholder=\"Chọn trạng thái của bài viết\"\n                                    optionFilterProp=\"children\"\n                                    onChange={this.onChangeStatus}\n                                    value={this.state.status}\n                                    // value={this.category}\n                                    onFocus={this.onFocus}\n                                    onBlur={this.onBlur}\n                                    onSearch={this.onSearch}\n                                    filterOption={(input, option) =>\n                                    option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                                    }\n                                >\n                                    <Option value=\"published\">Xuất bản</Option>\n                                    <Option value=\"draft\">Nháp</Option>\n                                    <Option value=\"disable\">Ẩn</Option>\n                                </Select>\n                            </Form.Item>\n                            <UploadImg key={this.state.postImg} onUploadSuccess={this.onUploadSuccess}\n                            ref={ref => this.uploadImgView= ref} />\n                            \n                        </Col>\n                        <Col className=\"gutter-row\" span={24}>\n                            <hr></hr>\n                            <EmailEditor\n                            key={this.state.postId}\n                            style={{width: '2000px'}}\n                            ref={ref=>this.editor = ref} />\n                        </Col>\n                    </Row>\n                    \n                </Card>\n            </>\n        );\n    }\n\n}\n// Get a reference to the database service\n// var database = firebase.database();","export const convertTimeToString = (time, format) => {\n    const date = new Date(time);\n    const year = date.getFullYear();\n    const mon = ('0' + (date.getMonth() + 1)).slice(-2);\n    const day = ('0' + date.getDate()).slice(-2);\n    const hour = ('0' + date.getHours()).slice(-2);\n    const min = ('0' + date.getMinutes()).slice(-2);\n    const second = ('0' + date.getSeconds()).slice(-2);\n  \n    return format\n      .replace('YYYY', year.toString())\n      .replace('yyyy', year.toString())\n      .replace('dd', day.toString())\n      .replace('DD', day.toString())\n      .replace('MM', mon.toString())\n      .replace('hh', hour.toString())\n      .replace('mm', min.toString())\n      .replace('ss', second.toString());\n  };","import React from \"react\";\nimport { Table, Input, Button, Icon, Tag, Popconfirm, Divider, Spin} from \"antd\";\nimport Highlighter from \"react-highlight-words\";\nimport { Link } from \"react-router-dom\";\nimport firebase from 'firebase';\nimport * as utils from '../utils/utils'\n\nexport default class Tables extends React.Component {\n  state = {\n    loading: false,\n    iconLoading: false,\n    searchText: \"\",\n    searchedColumn: \"\",\n    isLoading: true,\n    dataSource: [\n    ]\n  };\n\n  constructor(props) {\n    super(props);\n    firebase.database().ref('posts').once('value', snapshot => {\n      const data = [];\n      snapshot.forEach(function (childSnapshot) {\n        data.push({\n          ...childSnapshot.val(),\n          key: childSnapshot.key\n        });\n        // ...\n      });\n      this.setState({ dataSource: data, isLoading: false });\n    });\n  }\n\n  getColumnSearchProps = dataIndex => ({\n    filterDropdown: ({\n      setSelectedKeys,\n      selectedKeys,\n      confirm,\n      clearFilters\n    }) => (\n        <div style={{ padding: 8 }}>\n          <Input\n            ref={node => {\n              this.searchInput = node;\n            }}\n            placeholder={`Search ${dataIndex}`}\n            value={selectedKeys[0]}\n            onChange={e =>\n              setSelectedKeys(e.target.value ? [e.target.value] : [])\n            }\n            onPressEnter={() =>\n              this.handleSearch(selectedKeys, confirm, dataIndex)\n            }\n            style={{ width: 188, marginBottom: 8, display: \"block\" }}\n          />\n          <Button\n            type=\"primary\"\n            onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n            icon=\"search\"\n            size=\"small\"\n            style={{ width: 90, marginRight: 8 }}\n          >\n            Search\n        </Button>\n          <Button\n            onClick={() => this.handleReset(clearFilters)}\n            size=\"small\"\n            style={{ width: 90 }}\n          >\n            Reset\n        </Button>\n        </div>\n      ),\n    filterIcon: filtered => (\n      <Icon type=\"search\" style={{ color: filtered ? \"#1890ff\" : undefined }} />\n    ),\n    onFilter: (value, record) =>\n      record[dataIndex]\n        .toString()\n        .toLowerCase()\n        .includes(value.toLowerCase()),\n    onFilterDropdownVisibleChange: visible => {\n      if (visible) {\n        setTimeout(() => this.searchInput.select());\n      }\n    },\n    render: text =>\n      this.state.searchedColumn === dataIndex ? (\n        <Highlighter\n          highlightStyle={{ backgroundColor: \"#ffc069\", padding: 0 }}\n          searchWords={[this.state.searchText]}\n          autoEscape\n          textToHighlight={text.toString()}\n        />\n      ) : (\n          text\n        )\n  });\n\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm();\n    this.setState({\n      searchText: selectedKeys[0],\n      searchedColumn: dataIndex\n    });\n  };\n\n  handleReset = clearFilters => {\n    clearFilters();\n    this.setState({ searchText: \"\" });\n  };\n\n  handleDelete = key => {\n    const dataSource = [...this.state.dataSource];\n    this.setState({ dataSource: dataSource.filter(item => item.key !== key) });\n    firebase.database().ref('posts/' + key).remove()\n  };\n  render() {\n\n    const columns = [\n      {\n        title: \"Thời gian đăng\",\n        dataIndex: \"date\",\n        key: \"date\",\n        ...this.getColumnSearchProps(\"date\"),\n        render: text => <span>{utils.convertTimeToString(text, \"DD/MM/YYYY hh:mm\")}</span>\n      },\n      {\n        title: \"Tiêu đề\",\n        dataIndex: \"title\",\n        key: \"title\",\n        ...this.getColumnSearchProps(\"title\")\n      },\n      {\n        title: \"Tác giả\",\n        dataIndex: \"author\",\n        key: \"author\",\n        ...this.getColumnSearchProps(\"author\")\n      },\n      {\n        title: 'Thể loại',\n        dataIndex: \"category\",\n        key: \"category\",\n        ...this.getColumnSearchProps(\"category\"),\n        render: category => {\n          if(!category) return (\n            <span>\n              <Tag color=\"gold\">\n                Không có thể loại\n              </Tag>\n            </span>\n          )\n          return (\n            <span>\n              {category.split(\",\").map(ctgr => {\n                if (ctgr == 'news') return (\n                  <span key={ctgr}>\n                    <Tag color=\"#f50\">\n                      Tin tức\n                    </Tag>\n                  </span>\n                )\n                if (ctgr == 'events') return (\n                  <span key={ctgr}>\n                    <Tag color=\"#2db7f5\">\n                      Sự kiện\n                    </Tag>\n                  </span>\n                )\n                if (ctgr == 'stocks') return (\n                  <span key={ctgr}>\n                    <Tag color=\"#87d068\">\n                      Cổ phiếu\n                    </Tag>\n                  </span>\n                )\n              })\n              }\n            </span>\n          )\n        }\n      },\n      {\n        title: \"Chủ đề\",\n        dataIndex: \"tags\",\n        key: \"tags\",\n        ...this.getColumnSearchProps(\"tags\"),\n        render: tags => {\n          if (!tags) return (\n            <span>\n              <Tag color=\"gold\">\n                Không có chủ đề\n              </Tag>\n            </span>\n          )\n          return (\n            <span>\n              {tags.split(\",\").map(tag => <span key={tag}>\n                <Tag color=\"blue\" style={{marginBottom: 10}}>\n                  {tag}\n                </Tag>\n              </span>)\n              }\n            </span>\n          )\n        },\n      },\n      {\n        title: \"Trạng thái\",\n        dataIndex: \"status\",\n        key: \"status\",\n        ...this.getColumnSearchProps(\"status\"),\n        render: status => {\n          let color;\n          if (status === 'published') {\n            color = 'green';\n            return (\n              <Tag color={color} key={status}>\n                Xuất bản\n              </Tag>\n            )\n          }\n          else if (status === 'draft') {\n            color = 'gold';\n            return (\n              <Tag color={color} key={status}>\n                Nháp\n              </Tag>\n            )\n          }\n          else if (status === 'disable') {\n            color = 'red';\n            return (\n              <Tag color={color} key={status}>\n                Ẩn\n              </Tag>\n            )\n          } else {\n            return (\n              <Tag color=\"gold\">\n                Trạng thái chưa cập nhật\n              </Tag>\n            )\n            \n          }\n        },\n      },\n      {\n        title: 'Nổi bật',\n        dataIndex: 'popular',\n        key: 'popular',\n        ...this.getColumnSearchProps(\"popular\"),\n        render: popular => {\n          let color;\n          if (popular === true) {\n            color = 'purple';\n            return (\n              <Tag color={color} key={popular}>\n                Nổi bật\n              </Tag>\n            )\n          }\n\n        },\n\n      },\n      {\n        title: 'Hành động',\n        dataIndex: 'key',\n        key: 'key',\n        width: '150px',\n        render: (record) =>\n          this.state.dataSource.length >= 1 ? (\n            <div>\n              <Link to={'/viewPost?id=' + record}>\n                <span>Xem</span>\n              </Link>\n              <Divider type=\"vertical\" />\n              <Popconfirm title=\"Xác nhận xóa?\" okText=\"Có\" cancelText=\"Hủy\" onConfirm={() => this.handleDelete(record)}>\n                <a href=\"# \">Xóa</a>\n              </Popconfirm>\n              <Divider type=\"vertical\" />\n              <Link to={'/editorPage?id=' + record}>\n                <span>Sửa</span>\n              </Link>\n            </div>\n\n          ) : null,\n      },\n      \n    ];\n    if(this.state.isLoading){\n      return <div className=\"loadData\">\n                <Spin size=\"large\" tip=\"Loading...\" />\n              </div>\n    }\n    return (\n      <>\n        <Table columns={columns} dataSource={this.state.dataSource} bordered />\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport { Card} from \"antd\";\nimport Tables from \"../components/Tables\";\n\nexport default class Table extends React.Component {\n    render() {\n        return (\n            <>\n                <Card\n                    title=\"Danh sách tin tức\"\n                    bordered={false}                  \n                >\n                    <Tables />\n                </Card>\n            </>\n        );\n    }\n}\n","import React from 'react';\nimport { Form, Input, Button, } from 'antd';\nimport { Link } from \"react-router-dom\";\nimport {withFirebase} from '../utils/Firebase';\n\n\nconst INITIAL_STATE = {\n    username: '',\n    email: '',\n    passwordOne: '',\n    passwordTwo: '',\n    isAdmin: false,\n    error: null,\n  };\n  \n  const ERROR_CODE_ACCOUNT_EXISTS = 'auth/email-already-in-use';\n  \n  const ERROR_MSG_ACCOUNT_EXISTS = `\n    An account with this E-Mail address already exists.\n    Try to login with this account instead. If you think the\n    account is already used from one of the social logins, try\n    to sign in with one of them. Afterward, associate your accounts\n    on your personal account page.\n  `;\nclass Register extends React.Component {\n    constructor(props) {\n        super(props);\n    \n        this.state = { ...INITIAL_STATE };\n      }\n    \n      onSubmit = event => {\n        const { username, email, passwordOne, isAdmin } = this.state;\n        const roles = {};\n    \n        if (isAdmin) {\n          roles['ADMIN'] = 'ADMIN';\n        }\n    \n        this.props.firebase\n          .doCreateUserWithEmailAndPassword(email, passwordOne)\n          .then(authUser => {\n            // Create a user in your Firebase realtime database\n            return this.props.firebase.user(authUser.user.uid).set({\n              username,\n              email,\n              roles,\n            });\n          })\n          .then(() => {\n            return this.props.firebase.doSendEmailVerification();\n          })\n          .then(() => {\n            this.setState({ ...INITIAL_STATE });\n            this.props.history.push('/');\n          })\n          .catch(error => {\n            if (error.code === ERROR_CODE_ACCOUNT_EXISTS) {\n              error.message = ERROR_MSG_ACCOUNT_EXISTS;\n            }\n    \n            this.setState({ error });\n          });\n    \n        event.preventDefault();\n      };\n    \n      onChange = event => {\n        this.setState({ [event.target.name]: event.target.value });\n      };\n    \n      onChangeCheckbox = event => {\n        this.setState({ [event.target.name]: event.target.checked });\n      };\n\n      handleConfirmBlur = e => {\n        const { value } = e.target;\n        this.setState({ confirmDirty: this.state.confirmDirty || !!value });\n      };\n    \n      compareToFirstPassword = (rule, value, callback) => {\n        const { form } = this.props;\n        if (value && value !== form.getFieldValue('password')) {\n          callback('Hai mật khẩu không giống nhau!');\n        } else {\n          callback();\n        }\n      };\n    \n      validateToNextPassword = (rule, value, callback) => {\n        const { form } = this.props;\n        if (value && this.state.confirmDirty) {\n          form.validateFields(['confirm'], { force: true });\n        }\n        callback();\n      };\n    render() {\n        const {\n            email,\n            passwordOne,\n            passwordTwo,\n            error,\n          } = this.state;\n\n          const isInvalid =\n          passwordOne !== passwordTwo ||\n          passwordOne === '' ||\n          email === '';\n\n          \n          const tailFormItemLayout = {\n            wrapperCol: {\n              xs: {\n                span: 24,\n                offset: 0,\n              },\n              sm: {\n                span: 16,\n                offset: 4,\n              },\n            },\n          };\n          const { getFieldDecorator } = this.props.form;\n        return (\n            <>\n                <Form id=\"registerForm\" onSubmit={this.onSubmit} className=\"login-form\">\n                    <Form.Item label=\"Email\">\n                    {getFieldDecorator('email', {\n                        rules: [\n                        {\n                            type: 'email',\n                            message: 'Địa chỉ E-mail không hợp lệ!',\n                        },\n                        {\n                            required: true,\n                            message: 'Vui lòng nhập địa chỉ E-mail của bạn!',\n                        },\n                        ],\n                    })(<Input\n                        name=\"email\"\n                        value={email}\n                        onChange={this.onChange}\n                        type=\"text\"\n                        placeholder=\"Email Address\"\n                    />)}\n                        \n                    </Form.Item>\n                    <Form.Item label=\"Password\" hasFeedback>\n                    {getFieldDecorator('password', {\n                        rules: [\n                        {\n                            required: true,\n                            message: 'Vui lòng nhập mật khẩu của bạn!',\n                        },\n                        {\n                            validator: this.validateToNextPassword,\n                        },\n                        ],\n                    })(<Input.Password \n                        name=\"passwordOne\"\n                        value={passwordOne}\n                        onChange={this.onChange}\n                        type=\"password\"\n                        placeholder=\"Password\"\n                    />)}\n                        \n                    </Form.Item>\n                    <Form.Item label=\"Confirm Password\" hasFeedback>\n                    {getFieldDecorator('confirm', {\n                        rules: [\n                        {\n                            required: true,\n                            message: 'Vui lòng xác nhận mật khẩu của bạn!',\n                        },\n                        {\n                            validator: this.compareToFirstPassword,\n                        },\n                        ],\n                    })(<Input.Password \n                        name=\"passwordTwo\"\n                        value={passwordTwo}\n                        onChange={this.onChange}\n                        type=\"password\"\n                        placeholder=\"Confirm Password\"\n                        onBlur={this.handleConfirmBlur}\n                    />)}\n                        \n                    </Form.Item>\n                    <Form.Item {...tailFormItemLayout}>\n                        {/* <Checkbox>Remember me</Checkbox> */}\n                        \n                        <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" disabled={isInvalid} >\n                            Đăng ký\n                        </Button>\n                        {error && <p>{error.message}</p>}\n                        <Link to={'/login'}>Đăng nhập</Link>\n                        <Link to={'/passwordForget'} className=\"login-form-forgot\">Quên mật khẩu</Link>\n                    </Form.Item>\n                </Form>\n            </>\n        );\n    }\n}\n\nexport default withFirebase(Form.create({ name: 'register' })(Register));","import React from 'react';\nimport { Form, Input, Button, } from 'antd';\nimport { Link } from \"react-router-dom\";\nimport {withFirebase} from '../utils/Firebase';\n\n\nconst INITIAL_STATE = {\n    email: '',\n    error: null,\n  };\nclass PasswordForget extends React.Component {\n    constructor(props) {\n        super(props);\n    \n        this.state = { ...INITIAL_STATE };\n      }\n    \n      onSubmit = event => {\n        const { email } = this.state;\n    \n        this.props.firebase\n          .doPasswordReset(email)\n          .then(() => {\n            this.setState({ ...INITIAL_STATE });\n          })\n          .catch(error => {\n            this.setState({ error });\n          });\n    \n        event.preventDefault();\n      };\n    \n      onChange = event => {\n        this.setState({ [event.target.name]: event.target.value });\n      };\n    render() {\n        const { email, error } = this.state;\n\n        const isInvalid = email === '';\n        return (\n            <>\n                <Form id=\"registerForm\" onSubmit={this.onSubmit} className=\"login-form\">\n                    <Form.Item>\n                        <Input\n                            name=\"email\"\n                            value={this.state.email}\n                            onChange={this.onChange}\n                            type=\"text\"\n                            placeholder=\"Địa chỉ email\"\n                        />\n                    </Form.Item>\n                    <Form.Item>\n                        {/* <Checkbox>Remember me</Checkbox> */}\n                        \n                        <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" disabled={isInvalid} >\n                            ok\n                        </Button>\n                        {error && <p>{error.message}</p>}\n                        <Link to={'/login'}>Đăng nhập</Link>\n                        <Link to={'/register'} className=\"login-form-forgot\">Đăng ký</Link>\n                        \n                    </Form.Item>\n                </Form>\n            </>\n        );\n    }\n}\n\nexport default withFirebase(PasswordForget);","import React from \"react\";\nimport { Col, Card, Typography, Spin } from \"antd\";\nimport firebase from \"firebase\";\nimport * as utils from \"../utils/utils\";\nimport { Link } from \"react-router-dom\";\n\nconst { Meta } = Card;\nconst { Text } = Typography;\nexport default class CardPost extends React.Component {\n  state = {\n    isLoading: true,\n    dataSource: []\n  };\n\n  constructor(props) {\n    super(props);\n    firebase\n      .database()\n      .ref(\"posts\")\n      .once(\"value\", snapshot => {\n        const data = [];\n        snapshot.forEach(function(childSnapshot) {\n          data.push({\n            ...childSnapshot.val(),\n            key: childSnapshot.key\n          });\n          // ...\n        });\n        this.setState({ dataSource: data, isLoading: false });\n      });\n  }\n\n  render() {\n    if (this.state.isLoading) {\n      return (\n        <div className=\"loadData\">\n          <Spin size=\"large\" tip=\"Loading...\" />\n        </div>\n      );\n    }\n    return (\n      <>\n        {this.state.dataSource.map(item => {\n          if (item.status == \"published\") {\n            return (\n              <Col key={item.key} className=\"gutter-row\" span={6}>\n                <Link to={\"/viewPost?id=\" + item.key}>\n                  <Card\n                    className=\"cardPost\"\n                    extra={\n                      <span className=\"card-post__category\">{item.tags}</span>\n                    }\n                    cover={<img alt=\"example\" src={item.link} />}\n                  >\n                    <Meta\n                      style={{ marginBottom: 8 }}\n                      title={item.title}\n                      description={item.description}\n                    />\n                    <Text code>\n                      {utils.convertTimeToString(\n                        item.date,\n                        \"Ngày đăng: DD/MM/YYYY\"\n                      )}\n                    </Text>\n                  </Card>\n                </Link>\n              </Col>\n            );\n          }\n        })}\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport {Row} from \"antd\";\nimport CardPost from \"../components/CardPost\";\n\nexport default class BlogPosts extends React.Component {\n    render() {\n        return (\n            <div style={{margin: '15px'}}>\n                <Row gutter={[{ xs: 8, sm: 16, md: 24, lg: 32 }, 20]}>\n                    <CardPost />\n                </Row>\n            </div>\n        );\n    }\n}\n","import React from \"react\";\nimport firebase from \"firebase\";\nvar ReactDOMServer = require('react-dom/server');\nvar HtmlToReactParser = require('html-to-react').Parser;\n\nexport default class ViewPosts extends React.Component {\n    state = {\n        data: {}\n    };\n\n    componentDidMount(){\n        this.postId = this.props.history.location.search.slice(4);\n        this.userId = firebase.auth().currentUser.uid;\n        this.setState({\n            postId : this.postId,\n            // postName : this.postName,\n        })\n        console.log('Edit id',this.postId);\n        firebase.database().ref('posts').once('value',snapshot=>{\n            const data = [];\n            snapshot.forEach((childSnapshot) =>{\n                if(childSnapshot.key  === this.postId){\n                    const data = childSnapshot.val();\n                    console.log('Edit post',data.content);\n                    this.setState({data: data});\n                    \n                }\n              // ...\n            });\n          });\n    }\n\n    render() {\n        var htmlToReactParser = new HtmlToReactParser();\n        var reactElement = htmlToReactParser.parse(this.state.data.contentAsHTML);\n        var reactHtml = ReactDOMServer.renderToStaticMarkup(reactElement);\n        return (\n            \n            <>\n                {reactElement}\n            </>\n        );\n    }\n}\n// Get a reference to the database service\n// var database = firebase.database();","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\nimport Authorizations from './layouts/Authorizations';\nimport Login from './pages/Login';\nimport MainLayout from './layouts/MainLayout';\nimport EditorPage from './pages/Editor';\nimport Table from './pages/Table';\nimport {withFirebase} from './utils/Firebase'\nimport Register from './pages/Register';\nimport PasswordForget from './pages/PasswordForget';\nimport BlogPosts from './pages/BlogPosts';\nimport ViewPosts from './pages/ViewPosts';\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      isLogin: false,\n      isLoading: true,\n    };\n    this.listener = this.props.firebase.onAuthUserListener(\n      authUser => {\n        console.log('login success 1');\n        this.setState({ isLogin: true, isLoading: false });\n      },\n      () => {\n        console.log('login fail');\n        this.setState({ isLogin: false, isLoading: false });\n      },\n    );\n  }\n\n  componentDidMount(){\n    \n  }\n\n  componentWillUnmount(){\n    if(this.listener){\n      this.listener();\n    }\n  }\n  render(){\n    if(this.state.isLoading){\n      return <div className=\"preloader\">\n                <div className=\"status\"></div>\n              </div>\n    }\n    return(\n    <Router>\n      {!this.state.isLogin?\n      <Authorizations>\n        <Switch>\n          <Route path='/login' component={Login} />\n          <Route path='/register' component={Register} />\n          <Route path='/passwordForget' component={PasswordForget} />\n          <Redirect to={'/login'}></Redirect>\n          \n        </Switch>\n      </Authorizations>:\n      <MainLayout>\n        <Switch>\n          <Route exact path='/' component={Table} />\n          <Route exact path='/editorPage' component={EditorPage} />    \n          <Route exact path='/blogPost' component={BlogPosts} /> \n          <Route exact path='/viewPost' component={ViewPosts} />       \n          <Redirect to={'/'}></Redirect>\n        </Switch>\n      </MainLayout>}\n    </Router >\n    )\n  }\n  \n};\n\n\nexport default withFirebase(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/scss/style.scss';\nimport 'antd/dist/antd.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport Firebase, { FirebaseContext } from './utils/Firebase';\n\nReactDOM.render(\n    <FirebaseContext.Provider value={new Firebase()}>\n      <App />\n    </FirebaseContext.Provider>,\n    document.getElementById('root'),\n  );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}